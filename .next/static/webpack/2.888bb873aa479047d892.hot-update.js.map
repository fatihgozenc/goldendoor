{"version":3,"file":"static/webpack/2.888bb873aa479047d892.hot-update.js","sources":["webpack:///./components/MapContainer.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/core-js/library/fn/parse-float.js","webpack:///./node_modules/core-js/library/modules/_parse-float.js","webpack:///./node_modules/core-js/library/modules/es6.parse-float.js"],"sourcesContent":["import ReactMapGL, {Marker}  from 'react-map-gl';\nimport Icon from './Icon';\n\nconst MapContainer = ({data}) => {\n\n  const [viewport, setViewport] = React.useState({\n      width: '100%',\n      height: '100%',\n      latitude: parseFloat(data.breitengrad),\n      longitude: parseFloat(data.langengrad),\n      zoom: parseFloat(data.zoomwert)\n  });\n\n  return (\n    <>\n      <ReactMapGL\n        {...viewport}\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZmdvemVuYyIsImEiOiJjazVoMG9tMjUwY2p1M2xueHUzaXdyY2MzIn0.i6wqAEOUFdUyKEMcrUE__Q\"\n        onViewportChange={(viewport) => setViewport({...viewport})}\n      >\n        <Marker latitude={parseFloat(data.breitengrad)} \n        longitude={parseFloat(data.langengrad)} \n        offsetLeft={0} offsetTop={0}>\n          <Icon type=\"mapMarker\"/>\n        </Marker>\n      </ReactMapGL>\n    </>\n  )\n}\n\nexport default MapContainer;\n","module.exports = require(\"core-js/library/fn/parse-float\");","require('../modules/es6.parse-float');\nmodule.exports = require('../modules/_core').parseFloat;\n","var $parseFloat = require('./_global').parseFloat;\nvar $trim = require('./_string-trim').trim;\n\nmodule.exports = 1 / $parseFloat(require('./_string-ws') + '-0') !== -Infinity ? function parseFloat(str) {\n  var string = $trim(String(str), 3);\n  var result = $parseFloat(string);\n  return result === 0 && string.charAt(0) == '-' ? -0 : result;\n} : $parseFloat;\n","var $export = require('./_export');\nvar $parseFloat = require('./_parse-float');\n// 18.2.4 parseFloat(string)\n$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAAA;AACA;AASA;AAIA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AAAA;AAFA;AAGA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;AC/BA;;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;;;;;;;A","sourceRoot":""}
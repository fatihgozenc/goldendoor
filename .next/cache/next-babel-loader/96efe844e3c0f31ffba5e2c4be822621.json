{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/macbook/repos/goldendoor-next/components/opening/Scene.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSpring, animated } from 'react-spring';\n\nvar calc = function calc(x, y) {\n  return [x - window.innerWidth / 2, y - window.innerHeight / 2];\n};\n\nvar trans1 = function trans1(x, y) {\n  return \"translate3d(\".concat(_parseInt(x / 8), \"px,\").concat(_parseInt(y / 8), \"px,0)\");\n};\n\nvar trans2 = function trans2(x, y) {\n  return \"translate3d(\".concat(_parseInt(x / 25 + 5), \"px,\").concat(_parseInt(y / 10 / 10), \"px,0)\");\n}; // const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\n// const trans4 = (x, y) > `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\n\nvar Scene = function Scene() {\n  var _useSpring = useSpring(function () {\n    return {\n      xy: [0, 0],\n      config: {\n        mass: 10,\n        friction: 40\n      }\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      properties = _useSpring2[0],\n      setProperties = _useSpring2[1];\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    onMouseMove: function onMouseMove(_ref) {\n      var x = _ref.clientX,\n          y = _ref.clientY;\n      return setProperties({\n        xy: calc(x, y)\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(animated.div, {\n    className: \"card1\",\n    style: {\n      transform: properties.xy.interpolate(trans1)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(animated.div, {\n    className: \"card2\",\n    style: {\n      transform: properties.xy.interpolate(trans2)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nexport default Scene;","map":{"version":3,"sources":["/Users/macbook/repos/goldendoor-next/components/opening/Scene.js"],"names":["useSpring","animated","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","Scene","xy","config","mass","friction","properties","setProperties","clientX","clientY","transform","interpolate"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAACD,CAAC,GAAGE,MAAM,CAACC,UAAP,GAAoB,CAAzB,EAA4BF,CAAC,GAAGC,MAAM,CAACE,WAAP,GAAqB,CAArD,CAAV;AAAA,CAAb;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACL,CAAD,EAAIC,CAAJ;AAAA,+BAAyB,UAASD,CAAC,GAAG,CAAb,CAAzB,gBAA8C,UAASC,CAAC,GAAG,CAAb,CAA9C;AAAA,CAAf;;AACA,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACN,CAAD,EAAIC,CAAJ;AAAA,+BAAyB,UAASD,CAAC,GAAG,EAAJ,GAAS,CAAlB,CAAzB,gBAAmD,UAAUC,CAAC,GAAG,EAAL,GAAW,EAApB,CAAnD;AAAA,CAAf,C,CACA;AACA;;;AAEA,IAAMM,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,mBACiBV,SAAS,CAAC;AAAA,WAAO;AACpDW,MAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CADgD;AAEpDC,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAE,EADC;AAEPC,QAAAA,QAAQ,EAAE;AAFH;AAF4C,KAAP;AAAA,GAAD,CAD1B;AAAA;AAAA,MACZC,UADY;AAAA,MACAC,aADA;;AASnB,SACC;AACC,IAAA,SAAS,EAAC,WADX;AAEC,IAAA,WAAW,EAAE;AAAA,UAAYb,CAAZ,QAAGc,OAAH;AAAA,UAAwBb,CAAxB,QAAec,OAAf;AAAA,aAAgCF,aAAa,CAAC;AAAEL,QAAAA,EAAE,EAAET,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAV,OAAD,CAA7C;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,MAAC,QAAD,CAAU,GAAV;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAEJ,UAAU,CAACJ,EAAX,CAAcS,WAAd,CAA0BZ,MAA1B;AAAb,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIC,MAAC,QAAD,CAAU,GAAV;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAS,EAAEJ,UAAU,CAACJ,EAAX,CAAcS,WAAd,CAA0BX,MAA1B;AAAb,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADD;AAQA,CAjBD;;AAmBA,eAAeC,KAAf","sourcesContent":["import { useSpring, animated } from 'react-spring';\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${parseInt(x / 8)}px,${parseInt(y / 8)}px,0)`\nconst trans2 = (x, y) => `translate3d(${parseInt(x / 25 + 5)}px,${parseInt((y / 10) / 10)}px,0)`\n// const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\n// const trans4 = (x, y) > `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\nconst Scene = () => {\n\tconst [properties, setProperties] = useSpring(() => ({\n\t\txy: [0, 0],\n\t\tconfig: {\n\t\t\tmass: 10,\n\t\t\tfriction: 40\n\t\t}\n\t}));\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"container\"\n\t\t\tonMouseMove={({ clientX: x, clientY: y }) => setProperties({ xy: calc(x, y) })}>\n\t\t\t<animated.div className=\"card1\" style={{ transform: properties.xy.interpolate(trans1) }} />\n\t\t\t<animated.div className=\"card2\" style={{ transform: properties.xy.interpolate(trans2) }} />\n\t\t</div>\n\t)\n};\n\nexport default Scene;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/urbandruid/repos/goldendoor-next/components/layout/Newsletter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport { useForm } from \"react-hook-form\";\n\nvar Newsletter = function Newsletter(_ref) {\n  var data = _ref.data;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accessToken = _React$useState2[0],\n      setAccessToken = _React$useState2[1];\n\n  var n2goHeaders = new Headers();\n  n2goHeaders.append(\"Content-Type\", \"application/json\");\n  n2goHeaders.append(\"Authorization\", \"Basic \" + Buffer.from(process.env.NEWSLETTER_API_KEY).toString('base64'));\n\n  var n2goBody = _JSON$stringify({\n    \"username\": process.env.NEWSLETTER_USER,\n    \"password\": process.env.NEWSLETTER_PASS,\n    \"grant_type\": \"https://nl2go.com/jwt\"\n  });\n\n  var requestOptions = {\n    method: 'POST',\n    headers: n2goHeaders,\n    body: n2goBody,\n    redirect: 'follow'\n  };\n\n  var connectToNewsletter = function connectToNewsletter() {\n    fetch(\"\".concat(process.env.NEWSLETTER_API_HOST, \"/oauth/v2/token\"), requestOptions).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      return setAccessToken(result.access_token);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(values) {\n    console.log(values);\n  };\n\n  React.useEffect(function () {\n    connectToNewsletter();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"newsletter\",\n    className: \"newsletter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Newsletter\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, data.subtitel)), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"newsletter__form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"vorname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, data.vorname), __jsx(\"input\", {\n    name: \"vorname\",\n    ref: register({\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), errors.vorname && errors.vorname.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, data.name), __jsx(\"input\", {\n    name: \"name\",\n    ref: register({\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), errors.name && errors.name.message)), __jsx(\"div\", {\n    className: \"newsletter__form--block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"anrede\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, data.anrede), __jsx(\"input\", {\n    name: \"anrede\",\n    ref: register({\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), errors.anrede && errors.anrede.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, data.email), __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), errors.email && errors.email.message)), __jsx(\"div\", {\n    className: \"newsletter__datenschutz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, parse(data.datenschutz.text), __jsx(\"input\", {\n    type: \"checkbox\",\n    required: true,\n    name: \"acceptance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"acceptance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, data.datenschutz.checkbox), parse(data.datenschutz.extra)), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, data.datenschutz.button)));\n};\n\nexport default Newsletter;","map":{"version":3,"sources":["/home/urbandruid/repos/goldendoor-next/components/layout/Newsletter.js"],"names":["parse","useForm","Newsletter","data","React","useState","accessToken","setAccessToken","n2goHeaders","Headers","append","Buffer","from","process","env","NEWSLETTER_API_KEY","toString","n2goBody","NEWSLETTER_USER","NEWSLETTER_PASS","requestOptions","method","headers","body","redirect","connectToNewsletter","fetch","NEWSLETTER_API_HOST","then","response","json","result","access_token","error","console","log","handleSubmit","register","errors","onSubmit","values","useEffect","subtitel","vorname","validate","value","message","name","anrede","email","required","pattern","datenschutz","text","checkbox","extra","button"],"mappings":"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","sourcesContent":["import parse from 'html-react-parser';\nimport { useForm } from \"react-hook-form\";\n\nconst Newsletter = ({ data }) => {\n\n\tconst [accessToken, setAccessToken] = React.useState('');\n\n\tconst n2goHeaders = new Headers();\n\tn2goHeaders.append(\"Content-Type\", \"application/json\");\n\tn2goHeaders.append(\"Authorization\", \"Basic \" + Buffer.from(process.env.NEWSLETTER_API_KEY).toString('base64'));\n\n\tconst n2goBody = JSON.stringify({\n\t\t\"username\": process.env.NEWSLETTER_USER,\n\t\t\"password\": process.env.NEWSLETTER_PASS,\n\t\t\"grant_type\": \"https://nl2go.com/jwt\"\n\t});\n\n\tconst requestOptions = {\n\t\tmethod: 'POST',\n\t\theaders: n2goHeaders,\n\t\tbody: n2goBody,\n\t\tredirect: 'follow'\n\t};\n\n\tconst connectToNewsletter = () => {\n\t\tfetch(`${process.env.NEWSLETTER_API_HOST}/oauth/v2/token`, requestOptions)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => setAccessToken(result.access_token))\n\t\t\t.catch(error => console.log('error', error));\n\t}\n\n\tconst { handleSubmit, register, errors } = useForm();\n\tconst onSubmit = values => {\n\t\tconsole.log(values);\n\t};\n\n\tReact.useEffect(() => {\n\t\tconnectToNewsletter();\n\t}, [])\n\n\treturn (\n\t\t<div id=\"newsletter\" className=\"newsletter\">\n\n\t\t\t<div className=\"newsletter__block\">\n\t\t\t\t<h3>Newsletter</h3>\n\t\t\t\t<p>{data.subtitel}</p>\n\t\t\t</div>\n\n\t\t\t<form onSubmit={handleSubmit(onSubmit)} className=\"newsletter__form\">\n\n\t\t\t\t<div className=\"newsletter__form--block\">\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"vorname\">{data.vorname}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"vorname\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.vorname && errors.vorname.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"name\">{data.name}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.name && errors.name.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"newsletter__form--block\">\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"anrede\">{data.anrede}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"anrede\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.anrede && errors.anrede.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"email\">{data.email}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\trequired: 'Required',\n\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n\t\t\t\t\t\t\t\t\tmessage: \"invalid email address\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && errors.email.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"newsletter__datenschutz\">\n\t\t\t\t\t{parse(data.datenschutz.text)}\n\t\t\t\t\t<input type=\"checkbox\" required name=\"acceptance\" />\n\t\t\t\t\t<label htmlFor=\"acceptance\">{data.datenschutz.checkbox}</label>\n\t\t\t\t\t{parse(data.datenschutz.extra)}\n\t\t\t\t</div>\n\n\t\t\t\t<button type=\"submit\" className=\"golden__button\">{data.datenschutz.button}</button>\n\n\t\t\t</form>\n\n\t\t</div>\n\t)\n};\n\nexport default Newsletter;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nvar _jsxFileName = \"/home/urbandruid/repos/goldendoor-next/components/templates/karriere/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport Breadcrumb from '../../Breadcrumb';\nimport DragNDrop from '../../DragNDrop';\nimport Icon from '../../Icon';\nimport './style.scss';\nexport default (({\n  data\n}) => {\n  const formFields = data.fields.karriere_bewerbung;\n  const [jobStartDate, setJobStartDate] = React.useState(new Date());\n\n  const collapseBlock = el => {\n    let sectionHeight = el.scrollHeight;\n    let elTransition = el.style.transition;\n    el.style.transition = '';\n    requestAnimationFrame(function () {\n      el.style.height = sectionHeight + 'px';\n      el.style.transition = elTransition;\n      requestAnimationFrame(function () {\n        el.style.height = 6 + 'rem';\n      });\n    });\n  };\n\n  const expandBlock = el => {\n    let sectionHeight = el.scrollHeight;\n    el.style.height = sectionHeight + 'px';\n\n    let trigger = el => {\n      el.addEventListener('transitionend', function (e) {\n        el.removeEventListener('transitionend', trigger);\n        el.style.height = null;\n      });\n    };\n  };\n\n  const openBlock = e => {\n    const entryContainer = e.currentTarget.parentElement.parentElement;\n    let isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n    console.log(isCollapsed);\n\n    if (isCollapsed) {\n      collapseBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'false');\n    } else {\n      expandBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'true');\n    }\n\n    console.log(e.currentTarget);\n    e.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"page__title page__title--contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Breadcrumb, {\n    slug: data.slug,\n    title: data.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, data.title)), __jsx(\"div\", {\n    className: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map((item, key) => __jsx(\"div\", {\n    key: key,\n    className: \"career__entry--wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"career__entry\",\n    \"data-collapsed\": \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"career__entry--block career__entry--util\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, item.info.arbeitszeit), __jsx(\"div\", {\n    className: \"career__entry--block career__entry--info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, item.info.titel), parse(item.beschreibung), __jsx(\"a\", {\n    href: \"#bewerbung\",\n    className: \"golden__button button--bewerbung\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, formFields.bewerbung_button)), __jsx(\"div\", {\n    className: \"career__entry--block career__entry--util\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, item.info.standort), __jsx(\"div\", {\n    className: \"career__entry--block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: `#job-${key}`,\n    onClick: e => openBlock(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Icon, {\n    type: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))))))), __jsx(\"form\", {\n    action: \"#\",\n    id: \"bewerbung\",\n    className: \"career__application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, formFields.bewerbung_titel), __jsx(\"div\", {\n    className: \"contact__step--flexWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, _Object$values(formFields.bewerbung_etiketten).map((item, key) => __jsx(\"div\", {\n    key: key,\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, key === 3 ? __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: `bewerbung_${item}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, item, __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"text\",\n    id: `bewerbung_${item.toLowerCase()}`,\n    name: `bewerbung_${item.toLowerCase()}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })) : __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: `bewerbung_${item}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, `${item}*`, __jsx(\"input\", {\n    required: true,\n    className: \"input__text\",\n    type: \"text\",\n    id: `bewerbung_${item.toLowerCase()}`,\n    name: `bewerbung_${item.toLowerCase()}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_position\",\n    className: \"label__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, formFields.bewerbung_frage_1), __jsx(\"select\", {\n    id: \"job_position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"optgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map((item, key) => __jsx(\"option\", {\n    key: key,\n    value: item.info.titel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, item.info.titel, \", \", item.info.standort))))), __jsx(\"div\", {\n    className: \"contact__stepblock uploadcv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(DragNDrop, {\n    text: formFields.bewerbung_hochladen,\n    messages: formFields.formnachrichten,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_status\",\n    className: \"contact__stepblock--inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, formFields.bewerbung_frage_2.frage), formFields.bewerbung_frage_2.job_status.map((item, key) => __jsx(\"p\", {\n    className: \"contact__stepblock--inner contact__stepblock--career\",\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    className: \"input__radio\",\n    type: \"radio\",\n    name: \"job_status\",\n    value: item.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"label__radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, item.status)))), __jsx(\"div\", {\n    className: \"contact__stepblock contact__stepblock--date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"contact__stepblock--inner\",\n    htmlFor: \"job_start_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, formFields.bewerbung_zeit), __jsx(DatePicker, {\n    selected: jobStartDate,\n    onChange: date => setEventDate(date),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, formFields.bewerbung_nachricht), __jsx(\"textarea\", {\n    name: \"job_message\",\n    id: \"job_message\",\n    cols: \"30\",\n    rows: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock career__submitwrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, formFields.bewerbung_button)))));\n});","map":{"version":3,"sources":["/home/urbandruid/repos/goldendoor-next/components/templates/karriere/index.js"],"names":["parse","DatePicker","Breadcrumb","DragNDrop","Icon","data","formFields","fields","karriere_bewerbung","jobStartDate","setJobStartDate","React","useState","Date","collapseBlock","el","sectionHeight","scrollHeight","elTransition","style","transition","requestAnimationFrame","height","expandBlock","trigger","addEventListener","e","removeEventListener","openBlock","entryContainer","currentTarget","parentElement","isCollapsed","getAttribute","console","log","setAttribute","firstElementChild","classList","toggle","slug","title","karriere_eintrage","map","item","key","info","arbeitszeit","titel","beschreibung","bewerbung_button","standort","bewerbung_titel","bewerbung_etiketten","toLowerCase","bewerbung_frage_1","bewerbung_hochladen","formnachrichten","bewerbung_frage_2","frage","job_status","status","bewerbung_zeit","date","setEventDate","bewerbung_nachricht"],"mappings":"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","sourcesContent":["import parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport Breadcrumb from '../../Breadcrumb';\nimport DragNDrop from '../../DragNDrop';\nimport Icon from '../../Icon';\nimport './style.scss';\n\nexport default ({data}) => {\n\n\tconst formFields = data.fields.karriere_bewerbung;\n\n\tconst [jobStartDate, setJobStartDate] = React.useState(new Date());\n\n\tconst collapseBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tlet elTransition = el.style.transition;\n\t\tel.style.transition = '';\n\t\trequestAnimationFrame(function () {\n\t\t\tel.style.height = sectionHeight + 'px';\n\t\t\tel.style.transition = elTransition;\n\t\t\trequestAnimationFrame(function () {\n\t\t\t\tel.style.height = 6 + 'rem';\n\t\t\t});\n\t\t});\n\t}\n\n\tconst expandBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tel.style.height = sectionHeight + 'px';\n\t\tlet trigger = (el) => {\n\t\t\tel.addEventListener('transitionend', function (e) {\n\t\t\t\tel.removeEventListener('transitionend', trigger);\n\t\t\t\tel.style.height = null;\n\t\t\t});\n\t\t}\n\t}\n\n\tconst openBlock = (e) => {\n\t\tconst entryContainer = e.currentTarget.parentElement.parentElement;\n\t\tlet isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n\t\tconsole.log(isCollapsed)\n\t\tif (isCollapsed) {\n\t\t\tcollapseBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'false');\n\t\t} else {\n\t\t\texpandBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'true');\n\t\t}\n\t\tconsole.log(e.currentTarget)\n\t\te.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"page__title page__title--contact\">\n\t\t\t\t<Breadcrumb slug={data.slug} title={data.title} />\n\t\t\t\t<h1>{data.title}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"career\">\n\t\t\t\t{\n\t\t\t\t\tdata.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t<div key={key} className=\"career__entry--wrapper\">\n\t\t\t\t\t\t\t<div className=\"career__entry\" data-collapsed=\"false\">\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.arbeitszeit}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--info\">\n\t\t\t\t\t\t\t\t\t<h3>{item.info.titel}</h3>\n\t\t\t\t\t\t\t\t\t{parse(item.beschreibung)}\n\t\t\t\t\t\t\t\t\t<a href=\"#bewerbung\" className=\"golden__button button--bewerbung\">\n\t\t\t\t\t\t\t\t\t\t{formFields.bewerbung_button}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.standort}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block\">\n\t\t\t\t\t\t\t\t\t<a href={`#job-${key}`} onClick={(e) => openBlock(e)}>\n\t\t\t\t\t\t\t\t\t\t<Icon type=\"plus\" />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<form action=\"#\" id=\"bewerbung\" className=\"career__application\">\n\n\t\t\t\t<h2>{formFields.bewerbung_titel}</h2>\n\n\t\t\t\t<div className=\"contact__step--flexWrapper\">\n\n\t\t\t\t\t{Object.values(formFields.bewerbung_etiketten).map((item, key) => (\n\n\t\t\t\t\t\t<div key={key} className=\"contact__stepblock\">\n\n\t\t\t\t\t\t\t{key === 3\n\t\t\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t\t\t<label className=\"label__text\" htmlFor={`bewerbung_${item}`}>{item}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" id={`bewerbung_${item.toLowerCase()}`}\n\t\t\t\t\t\t\t\t\t\t\tname={`bewerbung_${item.toLowerCase()}`} />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<label className=\"label__text\" htmlFor={`bewerbung_${item}`}>{`${item}*`}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" id={`bewerbung_${item.toLowerCase()}`}\n\t\t\t\t\t\t\t\t\t\t\tname={`bewerbung_${item.toLowerCase()}`} />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_position\" className=\"label__select\">{formFields.bewerbung_frage_1}</label>\n\t\t\t\t\t\t<select id=\"job_position\">\n\t\t\t\t\t\t\t<optgroup>\n\t\t\t\t\t\t\t\t{data.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t\t\t\t<option key={key} value={item.info.titel}>{item.info.titel}, {item.info.standort}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock uploadcv\">\n\t\t\t\t\t\t<DragNDrop\n\t\t\t\t\t\t\ttext={formFields.bewerbung_hochladen}\n\t\t\t\t\t\t\tmessages={formFields.formnachrichten} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_status\"\n\t\t\t\t\t\t\tclassName=\"contact__stepblock--inner\">{formFields.bewerbung_frage_2.frage}</label>\n\t\t\t\t\t\t{formFields.bewerbung_frage_2.job_status.map((item, key) => (\n\t\t\t\t\t\t\t<p className=\"contact__stepblock--inner contact__stepblock--career\" key={key}>\n\t\t\t\t\t\t\t\t<input className=\"input__radio\" type=\"radio\" name=\"job_status\" value={item.status} />\n\t\t\t\t\t\t\t\t<span className=\"label__radio\">{item.status}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock contact__stepblock--date\">\n\t\t\t\t\t\t<label className=\"contact__stepblock--inner\" htmlFor=\"job_start_date\">{formFields.bewerbung_zeit}</label>\n\t\t\t\t\t\t<DatePicker selected={jobStartDate} onChange={date => setEventDate(date)} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_message\">{formFields.bewerbung_nachricht}</label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"job_message\"\n\t\t\t\t\t\t\tid=\"job_message\" cols=\"30\" rows=\"5\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock career__submitwrapper\" >\n\n\t\t\t\t\t\t<button type=\"submit\" className=\"golden__button\">{formFields.bewerbung_button}</button>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</form>\n\t\t</>\n\t)\n};"]},"metadata":{},"sourceType":"module"}
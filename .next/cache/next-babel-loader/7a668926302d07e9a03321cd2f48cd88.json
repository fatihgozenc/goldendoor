{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/urbandruid/repos/goldendoor-next/components/layout/Newsletter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport { useForm } from \"react-hook-form\";\n\nvar Newsletter = function Newsletter(_ref) {\n  var data = _ref.data;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accessToken = _React$useState2[0],\n      setAccessToken = _React$useState2[1];\n\n  var n2goHeaders = new Headers();\n  n2goHeaders.append(\"Content-Type\", \"application/json\");\n  n2goHeaders.append(\"Authorization\", \"Basic \" + Buffer.from(process.env.NEWSLETTER_API_KEY).toString('base64'));\n\n  var n2goBody = _JSON$stringify({\n    \"username\": process.env.NEWSLETTER_USER,\n    \"password\": process.env.NEWSLETTER_PASS,\n    \"grant_type\": \"https://nl2go.com/jwt\"\n  });\n\n  var requestOpts = {\n    method: 'POST',\n    headers: n2goHeaders,\n    body: n2goBody,\n    redirect: 'follow'\n  };\n\n  var connectToNewsletter = function connectToNewsletter() {\n    fetch(\"\".concat(process.env.NEWSLETTER_API_HOST, \"/oauth/v2/token\"), requestOpts).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      return setAccessToken(result.access_token);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  React.useEffect(function () {\n    connectToNewsletter();\n  }, []);\n\n  var registerNewsletterUser = function registerNewsletterUser() {\n    var n2goRegisterHeaders = new Headers();\n    n2goRegisterHeaders.append(\"Content-Type\", \"application/json\");\n    n2goRegisterHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\n\n    var n2goRegisterBody = _JSON$stringify({\n      \"list_id\": \"r9s81zk7\",\n      \"email\": \"email@example.tld\",\n      \"gender\": \"m\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"is_unsubscribed\": false,\n      \"is_blacklisted\": false\n    });\n\n    var registerRequestOpts = {\n      method: 'POST',\n      headers: n2goRegisterHeaders,\n      body: n2goRegisterBody,\n      redirect: 'follow'\n    };\n    fetch(\"\".concat(process.env.NEWSLETTER_API_HOST, \"/recipients\"), registerRequestOpts).then(function (response) {\n      return response.text();\n    }).then(function (result) {\n      return console.log(result);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(values) {\n    console.log(values, accessToken);\n  };\n\n  return __jsx(\"div\", {\n    id: \"newsletter\",\n    className: \"newsletter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Newsletter\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, data.subtitel)), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"newsletter__form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"vorname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, data.vorname), __jsx(\"input\", {\n    name: \"vorname\",\n    ref: register({\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), errors.vorname && errors.vorname.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, data.name), __jsx(\"input\", {\n    name: \"name\",\n    ref: register({\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), errors.name && errors.name.message)), __jsx(\"div\", {\n    className: \"newsletter__form--block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"anrede\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, data.anrede.value), __jsx(\"select\", {\n    name: \"anrede\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"optgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: data.anrede.herr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, data.anrede.herr), __jsx(\"option\", {\n    value: data.anrede.frau,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, data.anrede.frau))), errors.anrede && errors.anrede.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, data.email), __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: 'Required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), errors.email && errors.email.message)), __jsx(\"div\", {\n    className: \"newsletter__datenschutz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, parse(data.datenschutz.text), __jsx(\"input\", {\n    type: \"checkbox\",\n    required: true,\n    name: \"acceptance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"acceptance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, data.datenschutz.checkbox), parse(data.datenschutz.extra)), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, data.datenschutz.button)));\n};\n\nexport default Newsletter;","map":{"version":3,"sources":["/home/urbandruid/repos/goldendoor-next/components/layout/Newsletter.js"],"names":["parse","useForm","Newsletter","data","React","useState","accessToken","setAccessToken","n2goHeaders","Headers","append","Buffer","from","process","env","NEWSLETTER_API_KEY","toString","n2goBody","NEWSLETTER_USER","NEWSLETTER_PASS","requestOpts","method","headers","body","redirect","connectToNewsletter","fetch","NEWSLETTER_API_HOST","then","response","json","result","access_token","error","console","log","useEffect","registerNewsletterUser","n2goRegisterHeaders","n2goRegisterBody","registerRequestOpts","text","handleSubmit","register","errors","onSubmit","values","subtitel","vorname","validate","value","message","name","anrede","herr","frau","email","required","pattern","datenschutz","checkbox","extra","button"],"mappings":"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","sourcesContent":["import parse from 'html-react-parser';\nimport { useForm } from \"react-hook-form\";\n\nconst Newsletter = ({ data }) => {\n\n\tconst [accessToken, setAccessToken] = React.useState('');\n\n\tconst n2goHeaders = new Headers();\n\tn2goHeaders.append(\"Content-Type\", \"application/json\");\n\tn2goHeaders.append(\"Authorization\", \"Basic \" + Buffer.from(process.env.NEWSLETTER_API_KEY).toString('base64'));\n\n\tconst n2goBody = JSON.stringify({\n\t\t\"username\": process.env.NEWSLETTER_USER,\n\t\t\"password\": process.env.NEWSLETTER_PASS,\n\t\t\"grant_type\": \"https://nl2go.com/jwt\"\n\t});\n\n\tconst requestOpts = {\n\t\tmethod: 'POST',\n\t\theaders: n2goHeaders,\n\t\tbody: n2goBody,\n\t\tredirect: 'follow'\n\t};\n\n\tconst connectToNewsletter = () => {\n\t\tfetch(`${process.env.NEWSLETTER_API_HOST}/oauth/v2/token`, requestOpts)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => setAccessToken(result.access_token))\n\t\t\t.catch(error => console.log('error', error));\n\t}\n\n\tReact.useEffect(() => {\n\t\tconnectToNewsletter();\n\t}, [])\n\n\tconst registerNewsletterUser = () => {\n\t\tconst n2goRegisterHeaders = new Headers();\n\t\tn2goRegisterHeaders.append(\"Content-Type\", \"application/json\");\n\t\tn2goRegisterHeaders.append(\"Authorization\", \"Bearer \" + accessToken);\n\n\t\tconst n2goRegisterBody = JSON.stringify({\n\t\t\t\"list_id\": \"r9s81zk7\",\n\t\t\t\"email\": \"email@example.tld\",\n\t\t\t\"gender\": \"m\",\n\t\t\t\"first_name\": \"John\",\n\t\t\t\"last_name\": \"Doe\",\n\t\t\t\"is_unsubscribed\": false,\n\t\t\t\"is_blacklisted\": false,\n\t\t});\n\n\t\tconst registerRequestOpts = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: n2goRegisterHeaders,\n\t\t\tbody: n2goRegisterBody,\n\t\t\tredirect: 'follow'\n\t\t};\n\n\t\tfetch(`${process.env.NEWSLETTER_API_HOST}/recipients`, registerRequestOpts)\n\t\t\t.then(response => response.text())\n\t\t\t.then(result => console.log(result))\n\t\t\t.catch(error => console.log('error', error));\n\t}\n\n\tconst { handleSubmit, register, errors } = useForm();\n\tconst onSubmit = values => {\n\t\tconsole.log(values, accessToken);\n\t};\n\n\treturn (\n\t\t<div id=\"newsletter\" className=\"newsletter\">\n\n\t\t\t<div className=\"newsletter__block\">\n\t\t\t\t<h3>Newsletter</h3>\n\t\t\t\t<p>{data.subtitel}</p>\n\t\t\t</div>\n\n\t\t\t<form onSubmit={handleSubmit(onSubmit)} className=\"newsletter__form\">\n\n\t\t\t\t<div className=\"newsletter__form--block\">\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"vorname\">{data.vorname}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"vorname\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.vorname && errors.vorname.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"name\">{data.name}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.name && errors.name.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"newsletter__form--block\">\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"anrede\">{data.anrede.value}</label>\n\t\t\t\t\t\t<select name=\"anrede\" ref={register}>\n\t\t\t\t\t\t\t<optgroup>\n\t\t\t\t\t\t\t\t<option value={data.anrede.herr}>{data.anrede.herr}</option>\n\t\t\t\t\t\t\t\t<option value={data.anrede.frau}>{data.anrede.frau}</option>\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t{errors.anrede && errors.anrede.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"email\">{data.email}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\trequired: 'Required',\n\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n\t\t\t\t\t\t\t\t\tmessage: \"invalid email address\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && errors.email.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"newsletter__datenschutz\">\n\t\t\t\t\t{parse(data.datenschutz.text)}\n\t\t\t\t\t<input type=\"checkbox\" required name=\"acceptance\" />\n\t\t\t\t\t<label htmlFor=\"acceptance\">{data.datenschutz.checkbox}</label>\n\t\t\t\t\t{parse(data.datenschutz.extra)}\n\t\t\t\t</div>\n\n\t\t\t\t<button type=\"submit\" className=\"golden__button\">{data.datenschutz.button}</button>\n\n\t\t\t</form>\n\n\t\t</div>\n\t)\n};\n\nexport default Newsletter;"]},"metadata":{},"sourceType":"module"}
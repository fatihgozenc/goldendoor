{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport Icon from './Icon';\n\nconst MapContainer = ({\n  data\n}) => {\n  const [viewport, setViewport] = React.useState({\n    width: '100%',\n    height: '100%',\n    latitude: _parseInt(data.breitengrad),\n    longitude: _parseInt(data.langengrad),\n    zoom: _parseInt(data.zoomwert)\n  });\n  return __jsx(React.Fragment, null, __jsx(ReactMapGL, _extends({}, viewport, {\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZmdvemVuYyIsImEiOiJjazVoMG9tMjUwY2p1M2xueHUzaXdyY2MzIn0.i6wqAEOUFdUyKEMcrUE__Q\",\n    onViewportChange: viewport => setViewport(_objectSpread({}, viewport))\n  }), __jsx(Marker, {\n    latitude: _parseInt(data.breitengrad),\n    longitude: _parseInt(data.langengrad),\n    offsetLeft: 0,\n    offsetTop: 0\n  }, __jsx(Icon, {\n    type: \"mapMarker\"\n  }))));\n};\n\nexport default MapContainer;","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/components/MapContainer.js"],"names":["ReactMapGL","Marker","Icon","MapContainer","data","viewport","setViewport","React","useState","width","height","latitude","breitengrad","longitude","langengrad","zoom","zoomwert"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,IAAoBC,MAApB,QAAkC,cAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,KAAK,CAACC,QAAN,CAAe;AAC3CC,IAAAA,KAAK,EAAE,MADoC;AAE3CC,IAAAA,MAAM,EAAE,MAFmC;AAG3CC,IAAAA,QAAQ,EAAE,UAASP,IAAI,CAACQ,WAAd,CAHiC;AAI3CC,IAAAA,SAAS,EAAE,UAAST,IAAI,CAACU,UAAd,CAJgC;AAK3CC,IAAAA,IAAI,EAAE,UAASX,IAAI,CAACY,QAAd;AALqC,GAAf,CAAhC;AAQA,SACE,4BACE,MAAC,UAAD,eACMX,QADN;AAEE,IAAA,QAAQ,EAAC,mCAFX;AAGE,IAAA,oBAAoB,EAAC,2FAHvB;AAIE,IAAA,gBAAgB,EAAGA,QAAD,IAAcC,WAAW,mBAAKD,QAAL;AAJ7C,MAME,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,UAASD,IAAI,CAACQ,WAAd,CAAlB;AACA,IAAA,SAAS,EAAE,UAASR,IAAI,CAACU,UAAd,CADX;AAEA,IAAA,UAAU,EAAE,CAFZ;AAEe,IAAA,SAAS,EAAE;AAF1B,KAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IAHF,CANF,CADF,CADF;AAgBD,CA1BD;;AA4BA,eAAeX,YAAf","sourcesContent":["import ReactMapGL, {Marker}  from 'react-map-gl';\nimport Icon from './Icon';\n\nconst MapContainer = ({data}) => {\n\n  const [viewport, setViewport] = React.useState({\n      width: '100%',\n      height: '100%',\n      latitude: parseInt(data.breitengrad),\n      longitude: parseInt(data.langengrad),\n      zoom: parseInt(data.zoomwert)\n  });\n\n  return (\n    <>\n      <ReactMapGL\n        {...viewport}\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZmdvemVuYyIsImEiOiJjazVoMG9tMjUwY2p1M2xueHUzaXdyY2MzIn0.i6wqAEOUFdUyKEMcrUE__Q\"\n        onViewportChange={(viewport) => setViewport({...viewport})}\n      >\n        <Marker latitude={parseInt(data.breitengrad)} \n        longitude={parseInt(data.langengrad)} \n        offsetLeft={0} offsetTop={0}>\n          <Icon type=\"mapMarker\"/>\n        </Marker>\n      </ReactMapGL>\n    </>\n  )\n}\n\nexport default MapContainer;\n"]},"metadata":{},"sourceType":"module"}
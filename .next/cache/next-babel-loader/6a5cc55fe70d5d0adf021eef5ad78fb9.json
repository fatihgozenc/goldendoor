{"ast":null,"code":"var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nconst nodemailer = require('nodemailer');\n\nconst fs = require('fs');\n\nconst transporter = nodemailer.createTransport({\n  pool: true,\n  host: \"smtprelaypool.ispgateway.de\",\n  port: 465,\n  secure: true,\n  // use TLS\n  auth: {\n    user: 'f.gozenc@narciss-taurus.de',\n    pass: '1rk3n84L>h8c'\n  }\n});\n\nconst send = props => {\n  console.log(props);\n  const name = props.contactType == 'contactForm' ? props.kontakt_name + \" \" + props.kontakt_surname : props.name + ' ' + props.surname;\n  const email = props.contactType == 'contactForm' ? props.kontakt_email : props.email;\n  const text = props.contactType == 'contactForm' ? `\n    \\r\\nKontaktdaten\\r\\n\n    Anrede: ${props.kontakt_anrede}\\r\\n\n    Vorname: ${props.kontakt_name}\\r\\n\n    Nachname: ${props.kontakt_surname}\\r\\n\n    E-Mail: ${props.kontakt_email}\\r\\n\n    Telefon: ${props.kontakt_phone}\\r\\n\n    Firma: ${props.kontakt_company}\\r\\n\n    Nachricht: ${props.event_nachricht}\\r\\n\n    \\r\\nEventinformationen\\r\\n\n    Art der Veranstaltung: ${props.event_type}\\r\\n\n    Location Auswahl: ${props.event_location}\\r\\n\n    Konkretes Datum?: ${props.event_date_answer}\\r\\n\n    Zeitraum (Wenn es kein konkretes Datum gibt): ${props.date_range}\\r\\n\n    Event Datum (Wenn es ein konkretes Datum gibt): ${props.eventdatum}\\r\\n\n    Event Ausweichtermin (Wenn es ein konkretes Datum gibt): ${props.ausweichtermin}\\r\\n\n    Event Beginn Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitbeginn}\\r\\n\n    Event Ende Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitend}\\r\\n\n    \\r\\nZusatzinformationen\\r\\n\n    Anzahl der Personen: ${props.personenzahl}\\r\\n\n    Maximal Budget?: ${props.event_max_budget}\\r\\n\n    \\r\\nGewünschte dienstleistungen\\r\\n\n    Speisenauswahl: ${props.lang === 'de' ? props.event_speisen : props.event_food}\\r\\n\n    Mobiliarauswahl: ${props.lang === 'de' ? props.event_mobiliar : props.event_furnishings}\\r\\n\n    Technikauswahl: ${props.lang === 'de' ? props.event_technik : props.event_technique}\\r\\n\n    Dekoauswahl: ${props.lang === 'de' ? props.event_deko : props.event_decoration}\\r\\n\n    Musikauswahl: ${props.lang === 'de' ? props.event_musik : props.event_music}\\r\\n\n  ` : `\n    \\r\\nKarriere Bewerbung\\r\\n\n    Vorname: ${props.name}\\r\\n\n    Nachname: ${props.surname}\\r\\n\n    E-Mail: ${props.email}\\r\\n\n    Berufliche Stellung: ${props.position}\\r\\n\n    Aktueller Jobsstatus: ${props.jobstatus}\\r\\n\n    Mögliches Start-Datum: ${props.startdate}\\r\\n\n    Nachricht: ${props.message}\\r\\n\n  `;\n  const uploadedFile = props.contactType == 'contactForm' ? null : [{\n    filename: props.attachment.filename,\n    path: fs.createReadStream(props.attachment.path),\n    content: fs.createReadStream(props.attachment.path)\n  }];\n  const sender = `${name} <${email}>`;\n  const message = {\n    from: 'f.gozenc@narciss-taurus.de',\n    to: 'f.gozenc@narciss-taurus.de',\n    subject: `Neu Nachricht von ${sender}`,\n    text,\n    attachments: uploadedFile,\n    replyTo: sender\n  };\n  return new _Promise((resolve, reject) => {\n    transporter.sendMail(message, (error, info) => error ? reject(error) : resolve(info));\n  });\n};\n\nmodule.exports = send;","map":null,"metadata":{},"sourceType":"script"}
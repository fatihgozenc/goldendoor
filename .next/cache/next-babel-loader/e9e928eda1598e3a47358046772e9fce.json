{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport LoopingRow from './LoopingRow';\nimport './style.scss';\nexport default function ({\n  data,\n  windowWidth,\n  windowHeight\n}) {\n  //FUNCTION FOR DISTRIBUTING DATA INTO EQUAL ROWS FROM GIVEN JSON.\n  const distributeImageData = (arr, rows) => {\n    const rowImgCount = Math.ceil(arr.length / rows);\n\n    const emptyData = _Array$from({\n      length: rows\n    }, () => [0]);\n\n    const slicedData = emptyData.map((x, key) => {\n      if (key === 0) {\n        return arr.slice(key, rowImgCount);\n      } else if (key === rows - 1) {\n        return arr.slice(rowImgCount * key, -1);\n      } else {\n        return arr.slice(rowImgCount * key, rowImgCount * (key + 1));\n      }\n    });\n    return slicedData;\n  }; //I WANT 4 COLUMNS SO THIS NEEDS TO BE TYPED.\n\n\n  const loopingRowData = distributeImageData(data, windowWidth > 1600 ? 4 : 3);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"looping_gallery\"\n  }, loopingRowData.map((rowData, key) => __jsx(LoopingRow, {\n    windowWidth: windowWidth,\n    windowHeight: windowHeight,\n    key: key,\n    rowNumber: key + 1,\n    data: rowData\n  }))));\n}\n;","map":null,"metadata":{},"sourceType":"module"}
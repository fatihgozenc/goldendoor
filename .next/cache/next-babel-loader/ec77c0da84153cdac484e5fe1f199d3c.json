{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/macbook/repos/goldendoor-next/pages/downloads.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { API_HOST } from '../config';\nimport Downloads from '../components/templates/downloads';\n\nvar DownloadsPage = function DownloadsPage(_ref) {\n  var data = _ref.data;\n  return __jsx(Downloads, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  });\n};\n\nDownloadsPage.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(API_HOST, \"de/downloads\")));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: json\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default DownloadsPage;","map":{"version":3,"sources":["/Users/macbook/repos/goldendoor-next/pages/downloads.js"],"names":["API_HOST","Downloads","DownloadsPage","data","getInitialProps","fetch","res","json"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAc,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;AAAA,CAAtB;;AAEAD,aAAa,CAACE,eAAd,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbC,KAAK,WAAIL,QAAJ,kBADQ;;AAAA;AACzBM,UAAAA,GADyB;AAAA;AAAA,2CAEZA,GAAG,CAACC,IAAJ,EAFY;;AAAA;AAEzBA,UAAAA,IAFyB;AAAA,2CAGxB;AAAEJ,YAAAA,IAAI,EAAEI;AAAR,WAHwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAMA,eAAeL,aAAf","sourcesContent":["import { API_HOST } from '../config';\nimport Downloads from '../components/templates/downloads';\n\nconst DownloadsPage = ({ data }) => <Downloads data={data} />\n\nDownloadsPage.getInitialProps = async () => {\n\tconst res = await fetch(`${API_HOST}de/downloads`)\n\tconst json = await res.json()\n\treturn { data: json }\n}\n\nexport default DownloadsPage"]},"metadata":{},"sourceType":"module"}
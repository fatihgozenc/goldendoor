{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fatih/repos/goldendoor-next/components/templates/karriere/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport { useForm } from 'react-hook-form';\nimport { NextSeo } from 'next-seo';\nimport { useDropzone } from 'react-dropzone';\nimport Breadcrumb from '../../Breadcrumb';\nimport serialize from 'serialize-javascript';\nimport Icon from '../../Icon';\nimport './style.scss';\nexport default (function (_ref) {\n  var data = _ref.data,\n      language = _ref.language;\n  var formFields = data.fields.karriere_bewerbung;\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      jobStartDate = _React$useState2[0],\n      setJobStartDate = _React$useState2[1];\n\n  var collapseBlock = function collapseBlock(el) {\n    var sectionHeight = el.scrollHeight;\n    var elTransition = el.style.transition;\n    el.style.transition = '';\n    requestAnimationFrame(function () {\n      el.style.height = sectionHeight + 'px';\n      el.style.transition = elTransition;\n      requestAnimationFrame(function () {\n        el.style.height = 6 + 'rem';\n      });\n    });\n  };\n\n  var expandBlock = function expandBlock(el) {\n    var sectionHeight = el.scrollHeight;\n    el.style.height = sectionHeight + 'px';\n\n    var trigger = function trigger(el) {\n      el.addEventListener('transitionend', function (e) {\n        el.removeEventListener('transitionend', trigger);\n        el.style.height = null;\n      });\n    };\n  };\n\n  var openBlock = function openBlock(e) {\n    var entryContainer = e.currentTarget.parentElement.parentElement;\n    var isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n    console.log(isCollapsed);\n\n    if (isCollapsed) {\n      collapseBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'false');\n    } else {\n      expandBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'true');\n    }\n\n    console.log(e.currentTarget);\n    e.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n  };\n\n  var uploadText = formFields.bewerbung_hochladen;\n  var uploadMessages = formFields.formnachrichten;\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      uploadedFile = _React$useState4[0],\n      setUploadedFile = _React$useState4[1];\n\n  var onDrop = React.useCallback(function (acceptedFiles) {\n    acceptedFiles.forEach(function (file) {\n      var reader = new FileReader();\n\n      reader.onabort = function () {\n        return console.log(uploadMessages[1].text);\n      };\n\n      reader.onerror = function () {\n        return console.log(uploadMessages[1].text);\n      };\n\n      reader.onload = function () {\n        // Do whatever you want with the file contents\n        var binaryStr = reader.result;\n        setUploadedFile(binaryStr);\n        console.log(view);\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var uploadTextParts = uploadText.split(' ');\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      submitted = _React$useState6[0],\n      setSubmitted = _React$useState6[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    var formData = {\n      lang: language,\n      contactType: \"jobApplication\",\n      name: language === 'de' ? data.bewerbung_vorname : data.bewerbung_name,\n      surname: language === 'de' ? data.bewerbung_name : data.bewerbung_surname,\n      email: data.bewerbung_email,\n      position: data.job_position,\n      jobstatus: data.job_status,\n      startdate: jobStartDate.toDateString(),\n      message: data.job_message,\n      attachment: uploadedFile\n    };\n    fetch('/api/kontakt', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json',\n        'Content-Disposition': 'attachment'\n      },\n      body: serialize(formData)\n    }).then(function (res) {\n      res.status === 200 ? setSubmitted(!submitted) : '';\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: data.fields.seo.title,\n    description: data.fields.seo.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"page__title page__title--contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(Breadcrumb, {\n    slug: data.slug,\n    title: data.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, data.title)), __jsx(\"div\", {\n    className: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key,\n      className: \"career__entry--wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"career__entry\",\n      \"data-collapsed\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"career__entry--block career__entry--util\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, item.info.arbeitszeit), __jsx(\"div\", {\n      className: \"career__entry--block career__entry--info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, item.info.titel), parse(item.beschreibung), __jsx(\"a\", {\n      href: \"#bewerbung\",\n      className: \"golden__button button--bewerbung\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, formFields.bewerbung_button)), __jsx(\"div\", {\n      className: \"career__entry--block career__entry--util\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, item.info.standort), __jsx(\"div\", {\n      className: \"career__entry--block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#job-\".concat(key),\n      onClick: function onClick(e) {\n        return openBlock(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })))));\n  })), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    id: \"bewerbung\",\n    className: \"career__application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, formFields.bewerbung_titel), __jsx(\"div\", {\n    className: \"contact__step--flexWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, _Object$values(formFields.bewerbung_etiketten).map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key,\n      className: \"contact__stepblock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, key === 3 ? __jsx(\"label\", {\n      className: \"label__text\",\n      htmlFor: \"bewerbung_\".concat(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, item, __jsx(\"input\", {\n      className: \"input__text\",\n      type: \"text\",\n      id: \"bewerbung_\".concat(item.toLowerCase()),\n      name: \"bewerbung_\".concat(item.toLowerCase()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })) : __jsx(\"label\", {\n      className: \"label__text\",\n      htmlFor: \"bewerbung_\".concat(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"\".concat(item, \"*\"), __jsx(\"input\", {\n      ref: register({\n        required: true,\n        maxlength: 20,\n        pattern: /^[ ',-\\.A-Za-z\\xC0-\\xCF\\xD1-\\xD6\\xD8-\\xDD\\xDF-\\xE5\\xE7-\\xF6\\xF8-\\xFD\\xFF\\u0104-\\u0107\\u010C\\u010D\\u0116-\\u0119\\u012E\\u012F\\u0141-\\u0144\\u0152\\u0160\\u0161\\u016A\\u016B\\u0172\\u0173\\u0178-\\u017E\\u2202]+$/\n      }),\n      className: \"input__text\",\n      type: \"text\",\n      id: \"bewerbung_\".concat(item.toLowerCase()),\n      name: \"bewerbung_\".concat(item.toLowerCase()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })));\n  }), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_position\",\n    className: \"label__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, formFields.bewerbung_frage_1), __jsx(\"select\", {\n    name: \"job_position\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(\"optgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map(function (item, key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: item.info.titel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, item.info.titel, \", \", item.info.standort);\n  })))), __jsx(\"div\", {\n    className: \"contact__stepblock uploadcv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(\"div\", _extends({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), __jsx(\"input\", _extends({\n    name: \"uploadedfile\",\n    ref: register\n  }, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, uploadTextParts[0]), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, uploadTextParts[1]), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"\".concat(uploadTextParts[2], \" \").concat(uploadTextParts[3])))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_status\",\n    className: \"contact__stepblock--inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, formFields.bewerbung_frage_2.frage), formFields.bewerbung_frage_2.job_status.map(function (item, key) {\n    return __jsx(\"p\", {\n      className: \"contact__stepblock--inner contact__stepblock--career\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      ref: register,\n      className: \"input__radio\",\n      type: \"radio\",\n      name: \"job_status\",\n      value: item.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"label__radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, item.status));\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock contact__stepblock--date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"contact__stepblock--inner\",\n    htmlFor: \"job_start_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, formFields.bewerbung_zeit), __jsx(DatePicker, {\n    selected: jobStartDate,\n    onChange: function onChange(date) {\n      return setJobStartDate(date);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, formFields.bewerbung_nachricht), __jsx(\"textarea\", {\n    ref: register,\n    name: \"job_message\",\n    id: \"job_message\",\n    cols: \"30\",\n    rows: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock career__submitwrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, formFields.bewerbung_button)))));\n});","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/components/templates/karriere/index.js"],"names":["parse","DatePicker","useForm","NextSeo","useDropzone","Breadcrumb","serialize","Icon","data","language","formFields","fields","karriere_bewerbung","React","useState","Date","jobStartDate","setJobStartDate","collapseBlock","el","sectionHeight","scrollHeight","elTransition","style","transition","requestAnimationFrame","height","expandBlock","trigger","addEventListener","e","removeEventListener","openBlock","entryContainer","currentTarget","parentElement","isCollapsed","getAttribute","console","log","setAttribute","firstElementChild","classList","toggle","uploadText","bewerbung_hochladen","uploadMessages","formnachrichten","uploadedFile","setUploadedFile","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","text","onerror","onload","binaryStr","result","view","readAsArrayBuffer","getRootProps","getInputProps","uploadTextParts","split","submitted","setSubmitted","handleSubmit","register","errors","onSubmit","formData","lang","contactType","name","bewerbung_vorname","bewerbung_name","surname","bewerbung_surname","email","bewerbung_email","position","job_position","jobstatus","job_status","startdate","toDateString","message","job_message","attachment","fetch","method","headers","body","then","res","status","err","seo","title","description","slug","karriere_eintrage","map","item","key","info","arbeitszeit","titel","beschreibung","bewerbung_button","standort","bewerbung_titel","bewerbung_etiketten","toLowerCase","required","maxlength","pattern","bewerbung_frage_1","bewerbung_frage_2","frage","bewerbung_zeit","date","bewerbung_nachricht"],"mappings":"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","sourcesContent":["import parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport {useForm} from 'react-hook-form';\nimport { NextSeo } from 'next-seo';\nimport { useDropzone } from 'react-dropzone';\nimport Breadcrumb from '../../Breadcrumb';\nimport serialize from 'serialize-javascript';\nimport Icon from '../../Icon';\nimport './style.scss';\n\nexport default ({data, language}) => {\n\n\tconst formFields = data.fields.karriere_bewerbung;\n\n\tconst [jobStartDate, setJobStartDate] = React.useState(new Date());\n\n\tconst collapseBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tlet elTransition = el.style.transition;\n\t\tel.style.transition = '';\n\t\trequestAnimationFrame(function () {\n\t\t\tel.style.height = sectionHeight + 'px';\n\t\t\tel.style.transition = elTransition;\n\t\t\trequestAnimationFrame(function () {\n\t\t\t\tel.style.height = 6 + 'rem';\n\t\t\t});\n\t\t});\n\t}\n\n\tconst expandBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tel.style.height = sectionHeight + 'px';\n\t\tlet trigger = (el) => {\n\t\t\tel.addEventListener('transitionend', function (e) {\n\t\t\t\tel.removeEventListener('transitionend', trigger);\n\t\t\t\tel.style.height = null;\n\t\t\t});\n\t\t}\n\t}\n\n\tconst openBlock = (e) => {\n\t\tconst entryContainer = e.currentTarget.parentElement.parentElement;\n\t\tlet isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n\t\tconsole.log(isCollapsed)\n\t\tif (isCollapsed) {\n\t\t\tcollapseBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'false');\n\t\t} else {\n\t\t\texpandBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'true');\n\t\t}\n\t\tconsole.log(e.currentTarget)\n\t\te.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n\t}\n\n\tconst uploadText = formFields.bewerbung_hochladen;\n\tconst uploadMessages = formFields.formnachrichten;\n\tconst [uploadedFile, setUploadedFile] = React.useState('');\n\n\tconst onDrop = React.useCallback((acceptedFiles) => {\n\t\tacceptedFiles.forEach((file) => {\n\t\t\tconst reader = new FileReader()\n\t\t\treader.onabort = () => console.log(uploadMessages[1].text)\n\t\t\treader.onerror = () => console.log(uploadMessages[1].text)\n\t\t\treader.onload = () => {\n\t\t\t\t// Do whatever you want with the file contents\n\t\t\t\tconst binaryStr = reader.result\n\t\t\t\tsetUploadedFile(binaryStr)\n\t\t\t\tconsole.log(view)\n\t\t\t}\n\t\t\treader.readAsArrayBuffer(file)\n\t\t})\n\n\t}, [])\n\t\n\tconst { getRootProps, getInputProps } = useDropzone({ onDrop })\n\tconst uploadTextParts = uploadText.split(' ');\n\tconst [submitted, setSubmitted] = React.useState(false);\n\tconst { handleSubmit, register, errors } = useForm();\n\n\tconst onSubmit = data => { \n\t\tconst formData = {\n\t\t\tlang: language,\n\t\t\tcontactType: \"jobApplication\",\n\t\t\tname: language === 'de' ? data.bewerbung_vorname : data.bewerbung_name,\n\t\t\tsurname: language === 'de' ? data.bewerbung_name : data.bewerbung_surname,\n\t\t\temail: data.bewerbung_email,\n\t\t\tposition: data.job_position,\n\t\t\tjobstatus: data.job_status,\n\t\t\tstartdate : jobStartDate.toDateString(),\n\t\t\tmessage: data.job_message,\n\t\t\tattachment: uploadedFile\n\t\t}\n\n\t\tfetch('/api/kontakt', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Content-Disposition': 'attachment'\n      },\n      body: serialize(formData)\n    }).then((res) => {\n      res.status === 200 ? setSubmitted(!submitted) : ''\n    }).catch((err) => console.log(err))\n\t};\n\n\n\treturn (\n\t\t<>\n\t\t\t<NextSeo\n\t\t\t\ttitle={data.fields.seo.title}\n\t\t\t\tdescription={data.fields.seo.description}\n\t\t\t/>\n\t\t\t<div className=\"page__title page__title--contact\">\n\t\t\t\t<Breadcrumb slug={data.slug} title={data.title} />\n\t\t\t\t<h1>{data.title}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"career\">\n\t\t\t\t{\n\t\t\t\t\tdata.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t<div key={key} className=\"career__entry--wrapper\">\n\t\t\t\t\t\t\t<div className=\"career__entry\" data-collapsed=\"false\">\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.arbeitszeit}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--info\">\n\t\t\t\t\t\t\t\t\t<h3>{item.info.titel}</h3>\n\t\t\t\t\t\t\t\t\t{parse(item.beschreibung)}\n\t\t\t\t\t\t\t\t\t<a href=\"#bewerbung\" className=\"golden__button button--bewerbung\">\n\t\t\t\t\t\t\t\t\t\t{formFields.bewerbung_button}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.standort}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block\">\n\t\t\t\t\t\t\t\t\t<a href={`#job-${key}`} onClick={(e) => openBlock(e)}>\n\t\t\t\t\t\t\t\t\t\t<Icon type=\"plus\" />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<form onSubmit={handleSubmit(onSubmit)} id=\"bewerbung\" className=\"career__application\">\n\n\t\t\t\t<h2>{formFields.bewerbung_titel}</h2>\n\n\t\t\t\t<div className=\"contact__step--flexWrapper\">\n\n\t\t\t\t\t{Object.values(formFields.bewerbung_etiketten).map((item, key) => (\n\n\t\t\t\t\t\t<div key={key} className=\"contact__stepblock\">\n\n\t\t\t\t\t\t\t{key === 3\n\t\t\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t\t\t<label className=\"label__text\" htmlFor={`bewerbung_${item}`}>{item}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" id={`bewerbung_${item.toLowerCase()}`}\n\t\t\t\t\t\t\t\t\t\t\tname={`bewerbung_${item.toLowerCase()}`} />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<label className=\"label__text\" htmlFor={`bewerbung_${item}`}>{`${item}*`}\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tref={register({ \n\t\t\t\t\t\t\t\t\t\t\t\trequired: true, \n\t\t\t\t\t\t\t\t\t\t\t\tmaxlength: 20, \n\t\t\t\t\t\t\t\t\t\t\t\tpattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u \n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" id={`bewerbung_${item.toLowerCase()}`}\n\t\t\t\t\t\t\t\t\t\t\tname={`bewerbung_${item.toLowerCase()}`} />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_position\" className=\"label__select\">{formFields.bewerbung_frage_1}</label>\n\t\t\t\t\t\t<select name=\"job_position\" ref={register}>\n\t\t\t\t\t\t\t<optgroup>\n\t\t\t\t\t\t\t\t{data.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t\t\t\t<option key={key} value={item.info.titel}>{item.info.titel}, {item.info.standort}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock uploadcv\">\n\t\t\t\t\t\t<div {...getRootProps()}>\n\t\t\t\t\t\t\t<input name=\"uploadedfile\" ref={register} {...getInputProps()} />\n\t\t\t\t\t\t\t<span>{uploadTextParts[0]}</span>\n\t\t\t\t\t\t\t<span>{uploadTextParts[1]}</span>\n\t\t\t\t\t\t\t<span>{`${uploadTextParts[2]} ${uploadTextParts[3]}`}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_status\"\n\t\t\t\t\t\t\tclassName=\"contact__stepblock--inner\">{formFields.bewerbung_frage_2.frage}</label>\n\t\t\t\t\t\t{formFields.bewerbung_frage_2.job_status.map((item, key) => (\n\t\t\t\t\t\t\t<p className=\"contact__stepblock--inner contact__stepblock--career\" key={key}>\n\t\t\t\t\t\t\t\t<input ref={register} className=\"input__radio\" type=\"radio\" name=\"job_status\" value={item.status} />\n\t\t\t\t\t\t\t\t<span className=\"label__radio\">{item.status}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock contact__stepblock--date\">\n\t\t\t\t\t\t<label className=\"contact__stepblock--inner\" htmlFor=\"job_start_date\">{formFields.bewerbung_zeit}</label>\n\t\t\t\t\t\t<DatePicker selected={jobStartDate} onChange={date => setJobStartDate(date)} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_message\">{formFields.bewerbung_nachricht}</label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\tname=\"job_message\"\n\t\t\t\t\t\t\tid=\"job_message\" cols=\"30\" rows=\"5\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock career__submitwrapper\" >\n\n\t\t\t\t\t\t<button type=\"submit\" className=\"golden__button\">{formFields.bewerbung_button}</button>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</form>\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
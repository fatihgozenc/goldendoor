{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport { useForm } from \"react-hook-form\";\n\nvar Newsletter = function Newsletter(_ref) {\n  var data = _ref.data;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accessToken = _React$useState2[0],\n      setAccessToken = _React$useState2[1];\n\n  var n2goHeaders = new Headers();\n  n2goHeaders.append(\"Content-Type\", \"application/json\");\n  n2goHeaders.append(\"Authorization\", \"Basic \" + Buffer.from(process.env.NEWSLETTER_API_KEY).toString('base64'));\n\n  var n2goBody = _JSON$stringify({\n    \"username\": process.env.NEWSLETTER_USER,\n    \"password\": process.env.NEWSLETTER_PASS,\n    \"grant_type\": \"https://nl2go.com/jwt\"\n  });\n\n  var requestOpts = {\n    method: 'POST',\n    headers: n2goHeaders,\n    body: n2goBody,\n    redirect: 'follow'\n  };\n\n  var connectToNewsletter = function connectToNewsletter() {\n    fetch(\"\".concat(process.env.NEWSLETTER_API_HOST, \"/oauth/v2/token\"), requestOpts).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setAccessToken(result.access_token);\n      localStorage.setItem('newsletter', result.access_token);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  React.useEffect(function () {\n    // localStorage.getItem('newsletter') === null &&\n    connectToNewsletter();\n  }, []);\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      registerResponse = _React$useState4[0],\n      setRegisterResponse = _React$useState4[1];\n\n  var registerNewsletterUser = function registerNewsletterUser(name, surname, email, gender, token) {\n    var n2goRegisterHeaders = new Headers();\n    n2goRegisterHeaders.append(\"Content-Type\", \"application/json\");\n    n2goRegisterHeaders.append(\"Authorization\", \"Bearer \" + token);\n\n    var n2goRegisterBody = _JSON$stringify({\n      \"list_id\": \"r9s81zk7\",\n      \"email\": email,\n      \"gender\": gender === 'Herr' || 'Mr.' ? 'm' : 'f',\n      \"first_name\": name,\n      \"last_name\": surname,\n      \"is_unsubscribed\": false,\n      \"is_blacklisted\": false\n    });\n\n    var registerRequestOpts = {\n      method: 'POST',\n      headers: n2goRegisterHeaders,\n      body: n2goRegisterBody,\n      redirect: 'follow'\n    };\n    fetch(\"\".concat(process.env.NEWSLETTER_API_HOST, \"/recipients\"), registerRequestOpts).then(function (response) {\n      return response.text();\n    }).then(function (result) {\n      setRegisterResponse(result);\n      console.log(registerResponse);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(values) {\n    registerNewsletterUser(values.vorname, values.name, values.email, values.anrede, accessToken);\n  };\n\n  return __jsx(\"div\", {\n    id: \"newsletter\",\n    className: \"newsletter\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__block\"\n  }, __jsx(\"h3\", null, \"Newsletter\"), __jsx(\"p\", null, data.subtitel)), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"newsletter__form\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--block\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"vorname\"\n  }, data.vorname), __jsx(\"input\", {\n    name: \"vorname\",\n    ref: register({\n      pattern: /^[A-Za-z]+$/i,\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    })\n  }), errors.vorname && errors.vorname.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, data.name), __jsx(\"input\", {\n    name: \"name\",\n    ref: register({\n      pattern: /^[A-Za-z]+$/i,\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    })\n  }), errors.name && errors.name.message)), __jsx(\"div\", {\n    className: \"newsletter__form--block\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"anrede\"\n  }, data.anrede.value), __jsx(\"select\", {\n    name: \"anrede\",\n    ref: register\n  }, __jsx(\"optgroup\", null, __jsx(\"option\", {\n    value: data.anrede.herr\n  }, data.anrede.herr), __jsx(\"option\", {\n    value: data.anrede.frau\n  }, data.anrede.frau))), errors.anrede && errors.anrede.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, data.email), __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: data.fehlerfelder.required,\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: data.fehlerfelder.invalid\n      }\n    })\n  }), errors.email && errors.email.message)), __jsx(\"div\", {\n    className: \"newsletter__datenschutz\"\n  }, parse(data.datenschutz.text), __jsx(\"input\", {\n    className: \"input__radio\",\n    type: \"checkbox\",\n    required: true,\n    name: \"acceptance\"\n  }), __jsx(\"label\", {\n    className: \"label__radio\",\n    htmlFor: \"acceptance\"\n  }, data.datenschutz.checkbox), parse(data.datenschutz.extra)), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\"\n  }, data.datenschutz.button)));\n};\n\nexport default Newsletter;","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/components/layout/Newsletter.js"],"names":["parse","useForm","Newsletter","data","React","useState","accessToken","setAccessToken","n2goHeaders","Headers","append","Buffer","from","process","env","NEWSLETTER_API_KEY","toString","n2goBody","NEWSLETTER_USER","NEWSLETTER_PASS","requestOpts","method","headers","body","redirect","connectToNewsletter","fetch","NEWSLETTER_API_HOST","then","response","json","result","access_token","localStorage","setItem","error","console","log","useEffect","registerResponse","setRegisterResponse","registerNewsletterUser","name","surname","email","gender","token","n2goRegisterHeaders","n2goRegisterBody","registerRequestOpts","text","handleSubmit","register","errors","onSubmit","values","vorname","anrede","subtitel","pattern","validate","value","message","herr","frau","required","fehlerfelder","invalid","datenschutz","checkbox","extra","button"],"mappings":"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","sourcesContent":["import parse from 'html-react-parser';\nimport { useForm } from \"react-hook-form\";\n\nconst Newsletter = ({ data }) => {\n\n\tconst [accessToken, setAccessToken] = React.useState('');\n\n\tconst n2goHeaders = new Headers();\n\tn2goHeaders.append(\"Content-Type\", \"application/json\");\n\tn2goHeaders.append(\"Authorization\", \"Basic \" + Buffer.from(process.env.NEWSLETTER_API_KEY).toString('base64'));\n\n\tconst n2goBody = JSON.stringify({\n\t\t\"username\": process.env.NEWSLETTER_USER,\n\t\t\"password\": process.env.NEWSLETTER_PASS,\n\t\t\"grant_type\": \"https://nl2go.com/jwt\"\n\t});\n\n\tconst requestOpts = {\n\t\tmethod: 'POST',\n\t\theaders: n2goHeaders,\n\t\tbody: n2goBody,\n\t\tredirect: 'follow'\n\t};\n\n\tconst connectToNewsletter = () => {\n\t\tfetch(`${process.env.NEWSLETTER_API_HOST}/oauth/v2/token`, requestOpts)\n\t\t\t.then(response => response.json())\n\t\t\t.then(result => {\n\t\t\t\tsetAccessToken(result.access_token)\n\t\t\t\tlocalStorage.setItem('newsletter', result.access_token)\n\t\t\t})\n\t\t\t.catch(error => console.log('error', error));\n\t}\n\n\tReact.useEffect(() => {\n\t\t// localStorage.getItem('newsletter') === null &&\n\t\t\tconnectToNewsletter();\n\t}, [])\n\n\tconst [registerResponse, setRegisterResponse] = React.useState({});\n\n\tconst registerNewsletterUser = (name, surname, email, gender, token) => {\n\t\tconst n2goRegisterHeaders = new Headers();\n\t\tn2goRegisterHeaders.append(\"Content-Type\", \"application/json\");\n\t\tn2goRegisterHeaders.append(\"Authorization\", \"Bearer \" + token);\n\n\t\tconst n2goRegisterBody = JSON.stringify({\n\t\t\t\"list_id\": \"r9s81zk7\",\n\t\t\t\"email\": email,\n\t\t\t\"gender\": gender === 'Herr' || 'Mr.' ? 'm' : 'f',\n\t\t\t\"first_name\": name,\n\t\t\t\"last_name\": surname,\n\t\t\t\"is_unsubscribed\": false,\n\t\t\t\"is_blacklisted\": false,\n\t\t});\n\n\t\tconst registerRequestOpts = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: n2goRegisterHeaders,\n\t\t\tbody: n2goRegisterBody,\n\t\t\tredirect: 'follow'\n\t\t};\n\n\t\tfetch(`${process.env.NEWSLETTER_API_HOST}/recipients`, registerRequestOpts)\n\t\t\t.then(response => response.text())\n\t\t\t.then(result => {\n\t\t\t\tsetRegisterResponse(result)\n\t\t\t\tconsole.log(registerResponse)\n\t\t\t})\n\t\t\t.catch(error => console.log('error', error));\n\t}\n\n\tconst { handleSubmit, register, errors } = useForm();\n\tconst onSubmit = values => {\n\t\tregisterNewsletterUser(values.vorname, values.name, values.email, values.anrede, accessToken);\n\t};\n\n\treturn (\n\t\t<div id=\"newsletter\" className=\"newsletter\">\n\n\t\t\t<div className=\"newsletter__block\">\n\t\t\t\t<h3>Newsletter</h3>\n\t\t\t\t<p>{data.subtitel}</p>\n\t\t\t</div>\n\n\t\t\t<form onSubmit={handleSubmit(onSubmit)} className=\"newsletter__form\">\n\n\t\t\t\t<div className=\"newsletter__form--block\">\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"vorname\">{data.vorname}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"vorname\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tpattern: /^[A-Za-z]+$/i,\n\t\t\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.vorname && errors.vorname.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"name\">{data.name}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\tpattern: /^[A-Za-z]+$/i,\n\t\t\t\t\t\t\t\tvalidate: value => value !== \"admin\" || \"Nice try!\"\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.name && errors.name.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"newsletter__form--block\">\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"anrede\">{data.anrede.value}</label>\n\t\t\t\t\t\t<select name=\"anrede\" ref={register}>\n\t\t\t\t\t\t\t<optgroup>\n\t\t\t\t\t\t\t\t<option value={data.anrede.herr}>{data.anrede.herr}</option>\n\t\t\t\t\t\t\t\t<option value={data.anrede.frau}>{data.anrede.frau}</option>\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t{errors.anrede && errors.anrede.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"newsletter__form--field\">\n\t\t\t\t\t\t<label htmlFor=\"email\">{data.email}</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\trequired: data.fehlerfelder.required,\n\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n\t\t\t\t\t\t\t\t\tmessage: data.fehlerfelder.invalid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.email && errors.email.message}\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"newsletter__datenschutz\">\n\t\t\t\t\t{parse(data.datenschutz.text)}\n\t\t\t\t\t<input className=\"input__radio\" type=\"checkbox\" required name=\"acceptance\" />\n\t\t\t\t\t<label className=\"label__radio\" htmlFor=\"acceptance\">{data.datenschutz.checkbox}</label>\n\t\t\t\t\t{parse(data.datenschutz.extra)}\n\t\t\t\t</div>\n\n\t\t\t\t<button type=\"submit\" className=\"golden__button\">{data.datenschutz.button}</button>\n\n\t\t\t</form>\n\n\t\t</div>\n\t)\n};\n\nexport default Newsletter;"]},"metadata":{},"sourceType":"module"}
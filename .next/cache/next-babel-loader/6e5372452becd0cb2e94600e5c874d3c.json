{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/fatih/repos/goldendoor-next/components/templates/karriere/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport { useForm } from 'react-hook-form';\nimport { NextSeo } from 'next-seo';\nimport { useDropzone } from 'react-dropzone';\nimport Breadcrumb from '../../Breadcrumb';\nimport Dropzone from 'react-dropzone-uploader';\nimport serialize from 'serialize-javascript';\nimport Icon from '../../Icon';\nimport './style.scss';\nexport default (function (_ref) {\n  var data = _ref.data,\n      language = _ref.language;\n  var formFields = data.fields.karriere_bewerbung;\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      jobStartDate = _React$useState2[0],\n      setJobStartDate = _React$useState2[1];\n\n  var collapseBlock = function collapseBlock(el) {\n    var sectionHeight = el.scrollHeight;\n    var elTransition = el.style.transition;\n    el.style.transition = '';\n    requestAnimationFrame(function () {\n      el.style.height = sectionHeight + 'px';\n      el.style.transition = elTransition;\n      requestAnimationFrame(function () {\n        el.style.height = 6 + 'rem';\n      });\n    });\n  };\n\n  var expandBlock = function expandBlock(el) {\n    var sectionHeight = el.scrollHeight;\n    el.style.height = sectionHeight + 'px';\n\n    var trigger = function trigger(el) {\n      el.addEventListener('transitionend', function (e) {\n        el.removeEventListener('transitionend', trigger);\n        el.style.height = null;\n      });\n    };\n  };\n\n  var openBlock = function openBlock(e) {\n    var entryContainer = e.currentTarget.parentElement.parentElement;\n    var isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n    console.log(isCollapsed);\n\n    if (isCollapsed) {\n      collapseBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'false');\n    } else {\n      expandBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'true');\n    }\n\n    console.log(e.currentTarget);\n    e.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n  };\n\n  var labels = data.fields.karriere_bewerbung.bewerbung_etiketten;\n  var uploadText = formFields.bewerbung_hochladen;\n  var uploadMessages = formFields.formnachrichten;\n\n  var _React$useState3 = React.useState({\n    file: '',\n    buffer: {}\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      uploadedFile = _React$useState4[0],\n      setUploadedFile = _React$useState4[1];\n\n  var MyUploader = function MyUploader() {\n    // specify upload params and url for your files\n    var getUploadParams = function getUploadParams(_ref2) {\n      var meta = _ref2.meta;\n      return {\n        url: 'https://httpbin.org/post'\n      };\n    }; // called every time a file's `status` changes\n\n\n    var handleChangeStatus = function handleChangeStatus(_ref3, status) {\n      var meta = _ref3.meta,\n          file = _ref3.file;\n      console.log(status, meta, file);\n    }; // receives array of files that are done uploading when submit button is clicked\n\n\n    var handleSubmit = function handleSubmit(files, allFiles) {\n      console.log(files.map(function (f) {\n        return f.meta;\n      }));\n      allFiles.forEach(function (f) {\n        return f.remove();\n      });\n    };\n\n    return __jsx(Dropzone, {\n      getUploadParams: getUploadParams,\n      onChangeStatus: handleChangeStatus,\n      onSubmit: handleSubmit,\n      accept: \"application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  };\n\n  var onDrop = React.useCallback(function (acceptedFiles) {\n    acceptedFiles.forEach(function (file) {\n      var reader = new FileReader();\n\n      reader.onabort = function () {\n        return console.log(uploadMessages[1].text);\n      };\n\n      reader.onerror = function () {\n        return console.log(uploadMessages[1].text);\n      };\n\n      reader.onload = function () {\n        // Do whatever you want with the file contents\n        var binaryStr = reader.result;\n        setUploadedFile({\n          file: file,\n          buffer: binaryStr\n        });\n      };\n\n      reader.readAsArrayBuffer(file);\n      console.log(file);\n    });\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var uploadTextParts = uploadText.split(' ');\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      submitted = _React$useState6[0],\n      setSubmitted = _React$useState6[1];\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    var mailData = new FormData();\n    mailData.append('attachment', uploadedFile.file);\n    mailData.append('filename', uploadedFile.file.name);\n    mailData.append('name', data.bewerbung_vorname);\n    mailData.append('surname', data.bewerbung_name);\n    var formData = {\n      lang: language,\n      contactType: \"jobApplication\",\n      name: language === 'de' ? data.bewerbung_vorname : data.bewerbung_name,\n      surname: language === 'de' ? data.bewerbung_name : data.bewerbung_surname,\n      email: data.bewerbung_email,\n      position: data.job_position,\n      jobstatus: data.job_status,\n      startdate: jobStartDate.toDateString(),\n      message: data.job_message,\n      attachment: uploadedFile\n    };\n    console.log(uploadedFile);\n    fetch('/api/bewerbung', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*'\n      },\n      body: mailData\n    }).then(function (res) {\n      res.status === 200 ? setSubmitted(!submitted) : '';\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: data.fields.seo.title,\n    description: data.fields.seo.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"page__title page__title--contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Breadcrumb, {\n    slug: data.slug,\n    title: data.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, data.title)), __jsx(\"div\", {\n    className: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key,\n      className: \"career__entry--wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"career__entry\",\n      \"data-collapsed\": \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"career__entry--block career__entry--util\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, item.info.arbeitszeit), __jsx(\"div\", {\n      className: \"career__entry--block career__entry--info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, item.info.titel), parse(item.beschreibung), __jsx(\"a\", {\n      href: \"#bewerbung\",\n      className: \"golden__button button--bewerbung\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, formFields.bewerbung_button)), __jsx(\"div\", {\n      className: \"career__entry--block career__entry--util\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, item.info.standort), __jsx(\"div\", {\n      className: \"career__entry--block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: \"#job-\".concat(key),\n      onClick: function onClick(e) {\n        return openBlock(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, __jsx(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })))));\n  })), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    id: \"bewerbung\",\n    className: \"career__application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, formFields.bewerbung_titel), __jsx(\"div\", {\n    className: \"contact__step--flexWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, labels.bewerbung_vorname, \"*\", __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"text\",\n    ref: register({\n      required: true,\n      maxlength: 20,\n      pattern: /^[ ',-\\.A-Za-z\\xC0-\\xCF\\xD1-\\xD6\\xD8-\\xDD\\xDF-\\xE5\\xE7-\\xF6\\xF8-\\xFD\\xFF\\u0104-\\u0107\\u010C\\u010D\\u0116-\\u0119\\u012E\\u012F\\u0141-\\u0144\\u0152\\u0160\\u0161\\u016A\\u016B\\u0172\\u0173\\u0178-\\u017E\\u2202]+$/\n    }),\n    name: \"bewerbung_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, labels.bewerbung_name, \"*\", __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"text\",\n    ref: register({\n      required: true,\n      maxlength: 20,\n      pattern: /^[ ',-\\.A-Za-z\\xC0-\\xCF\\xD1-\\xD6\\xD8-\\xDD\\xDF-\\xE5\\xE7-\\xF6\\xF8-\\xFD\\xFF\\u0104-\\u0107\\u010C\\u010D\\u0116-\\u0119\\u012E\\u012F\\u0141-\\u0144\\u0152\\u0160\\u0161\\u016A\\u016B\\u0172\\u0173\\u0178-\\u017E\\u2202]+$/\n    }),\n    name: \"bewerbung_surname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"EMAIL*\", __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"email\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"UNG\\xDCLTIGE E-MAIL-ADRESSE\"\n      }\n    }),\n    name: \"bewerbung_email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_tel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, labels.bewerbung_telefon, __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"tel\",\n    ref: register({\n      maxlength: 35\n    }),\n    name: \"bewerbung_tel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_position\",\n    className: \"label__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, formFields.bewerbung_frage_1), __jsx(\"select\", {\n    name: \"job_position\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, __jsx(\"optgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map(function (item, key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: item.info.titel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, item.info.titel, \", \", item.info.standort);\n  })))), __jsx(\"div\", {\n    className: \"contact__stepblock uploadcv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, __jsx(\"div\", _extends({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), __jsx(\"input\", _extends({\n    name: \"uploadedfile\",\n    ref: register\n  }, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, uploadTextParts[0]), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, uploadTextParts[1]), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"\".concat(uploadTextParts[2], \" \").concat(uploadTextParts[3])))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_status\",\n    className: \"contact__stepblock--inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, formFields.bewerbung_frage_2.frage), formFields.bewerbung_frage_2.job_status.map(function (item, key) {\n    return __jsx(\"p\", {\n      className: \"contact__stepblock--inner contact__stepblock--career\",\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      ref: register,\n      className: \"input__radio\",\n      type: \"radio\",\n      name: \"job_status\",\n      value: item.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), __jsx(\"span\", {\n      className: \"label__radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, item.status));\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock contact__stepblock--date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"contact__stepblock--inner\",\n    htmlFor: \"job_start_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, formFields.bewerbung_zeit), __jsx(DatePicker, {\n    selected: jobStartDate,\n    onChange: function onChange(date) {\n      return setJobStartDate(date);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, formFields.bewerbung_nachricht), __jsx(\"textarea\", {\n    ref: register,\n    name: \"job_message\",\n    id: \"job_message\",\n    cols: \"30\",\n    rows: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock career__submitwrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, formFields.bewerbung_button)))));\n});","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/components/templates/karriere/index.js"],"names":["parse","DatePicker","useForm","NextSeo","useDropzone","Breadcrumb","Dropzone","serialize","Icon","data","language","formFields","fields","karriere_bewerbung","React","useState","Date","jobStartDate","setJobStartDate","collapseBlock","el","sectionHeight","scrollHeight","elTransition","style","transition","requestAnimationFrame","height","expandBlock","trigger","addEventListener","e","removeEventListener","openBlock","entryContainer","currentTarget","parentElement","isCollapsed","getAttribute","console","log","setAttribute","firstElementChild","classList","toggle","labels","bewerbung_etiketten","uploadText","bewerbung_hochladen","uploadMessages","formnachrichten","file","buffer","uploadedFile","setUploadedFile","MyUploader","getUploadParams","meta","url","handleChangeStatus","status","handleSubmit","files","allFiles","map","f","forEach","remove","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","text","onerror","onload","binaryStr","result","readAsArrayBuffer","getRootProps","getInputProps","uploadTextParts","split","submitted","setSubmitted","register","errors","onSubmit","mailData","FormData","append","name","bewerbung_vorname","bewerbung_name","formData","lang","contactType","surname","bewerbung_surname","email","bewerbung_email","position","job_position","jobstatus","job_status","startdate","toDateString","message","job_message","attachment","fetch","method","headers","body","then","res","err","seo","title","description","slug","karriere_eintrage","item","key","info","arbeitszeit","titel","beschreibung","bewerbung_button","standort","bewerbung_titel","required","maxlength","pattern","value","bewerbung_telefon","bewerbung_frage_1","bewerbung_frage_2","frage","bewerbung_zeit","date","bewerbung_nachricht"],"mappings":"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","sourcesContent":["import parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport { useForm } from 'react-hook-form';\nimport { NextSeo } from 'next-seo';\nimport { useDropzone } from 'react-dropzone';\nimport Breadcrumb from '../../Breadcrumb';\nimport Dropzone from 'react-dropzone-uploader'\nimport serialize from 'serialize-javascript';\nimport Icon from '../../Icon';\nimport './style.scss';\n\nexport default ({ data, language }) => {\n\n\tconst formFields = data.fields.karriere_bewerbung;\n\n\tconst [jobStartDate, setJobStartDate] = React.useState(new Date());\n\n\tconst collapseBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tlet elTransition = el.style.transition;\n\t\tel.style.transition = '';\n\t\trequestAnimationFrame(function () {\n\t\t\tel.style.height = sectionHeight + 'px';\n\t\t\tel.style.transition = elTransition;\n\t\t\trequestAnimationFrame(function () {\n\t\t\t\tel.style.height = 6 + 'rem';\n\t\t\t});\n\t\t});\n\t}\n\n\tconst expandBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tel.style.height = sectionHeight + 'px';\n\t\tlet trigger = (el) => {\n\t\t\tel.addEventListener('transitionend', function (e) {\n\t\t\t\tel.removeEventListener('transitionend', trigger);\n\t\t\t\tel.style.height = null;\n\t\t\t});\n\t\t}\n\t}\n\n\tconst openBlock = (e) => {\n\t\tconst entryContainer = e.currentTarget.parentElement.parentElement;\n\t\tlet isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n\t\tconsole.log(isCollapsed)\n\t\tif (isCollapsed) {\n\t\t\tcollapseBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'false');\n\t\t} else {\n\t\t\texpandBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'true');\n\t\t}\n\t\tconsole.log(e.currentTarget)\n\t\te.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n\t}\n\n\tconst labels = data.fields.karriere_bewerbung.bewerbung_etiketten;\n\n\tconst uploadText = formFields.bewerbung_hochladen;\n\tconst uploadMessages = formFields.formnachrichten;\n\tconst [uploadedFile, setUploadedFile] = React.useState({\n\t\tfile: '',\n\t\tbuffer: {}\n\t});\n\n\tconst MyUploader = () => {\n\t\t// specify upload params and url for your files\n\t\tconst getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n\n\t\t// called every time a file's `status` changes\n\t\tconst handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n\t\t// receives array of files that are done uploading when submit button is clicked\n\t\tconst handleSubmit = (files, allFiles) => {\n\t\t\tconsole.log(files.map(f => f.meta))\n\t\t\tallFiles.forEach(f => f.remove())\n\t\t}\n\n\t\treturn (\n\t\t\t<Dropzone\n\t\t\t\tgetUploadParams={getUploadParams}\n\t\t\t\tonChangeStatus={handleChangeStatus}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taccept=\"application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n\t\t\t/>\n\t\t)\n\t}\n\n\n\tconst onDrop = React.useCallback((acceptedFiles) => {\n\t\tacceptedFiles.forEach((file) => {\n\t\t\tconst reader = new FileReader()\n\t\t\treader.onabort = () => console.log(uploadMessages[1].text)\n\t\t\treader.onerror = () => console.log(uploadMessages[1].text)\n\t\t\treader.onload = () => {\n\t\t\t\t// Do whatever you want with the file contents\n\t\t\t\tconst binaryStr = reader.result\n\t\t\t\tsetUploadedFile({ file: file, buffer: binaryStr })\n\t\t\t}\n\t\t\treader.readAsArrayBuffer(file)\n\t\t\tconsole.log(file)\n\t\t})\n\n\t}, [])\n\n\tconst { getRootProps, getInputProps } = useDropzone({ onDrop })\n\tconst uploadTextParts = uploadText.split(' ');\n\tconst [submitted, setSubmitted] = React.useState(false);\n\tconst { handleSubmit, register, errors } = useForm();\n\n\tconst onSubmit = data => {\n\n\t\tconst mailData = new FormData();\n\n\t\tmailData.append('attachment', uploadedFile.file)\n\t\tmailData.append('filename', uploadedFile.file.name)\n\t\tmailData.append('name', data.bewerbung_vorname)\n\t\tmailData.append('surname', data.bewerbung_name)\n\n\t\tconst formData = {\n\t\t\tlang: language,\n\t\t\tcontactType: \"jobApplication\",\n\t\t\tname: language === 'de' ? data.bewerbung_vorname : data.bewerbung_name,\n\t\t\tsurname: language === 'de' ? data.bewerbung_name : data.bewerbung_surname,\n\t\t\temail: data.bewerbung_email,\n\t\t\tposition: data.job_position,\n\t\t\tjobstatus: data.job_status,\n\t\t\tstartdate: jobStartDate.toDateString(),\n\t\t\tmessage: data.job_message,\n\t\t\tattachment: uploadedFile\n\t\t}\n\t\tconsole.log(uploadedFile)\n\t\tfetch('/api/bewerbung', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json, text/plain, */*'\n\t\t\t},\n\t\t\tbody: mailData\n\t\t}).then((res) => {\n\t\t\tres.status === 200 ? setSubmitted(!submitted) : ''\n\t\t}).catch((err) => console.log(err))\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<NextSeo\n\t\t\t\ttitle={data.fields.seo.title}\n\t\t\t\tdescription={data.fields.seo.description}\n\t\t\t/>\n\t\t\t<div className=\"page__title page__title--contact\">\n\t\t\t\t<Breadcrumb slug={data.slug} title={data.title} />\n\t\t\t\t<h1>{data.title}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"career\">\n\t\t\t\t{\n\t\t\t\t\tdata.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t<div key={key} className=\"career__entry--wrapper\">\n\t\t\t\t\t\t\t<div className=\"career__entry\" data-collapsed=\"false\">\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.arbeitszeit}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--info\">\n\t\t\t\t\t\t\t\t\t<h3>{item.info.titel}</h3>\n\t\t\t\t\t\t\t\t\t{parse(item.beschreibung)}\n\t\t\t\t\t\t\t\t\t<a href=\"#bewerbung\" className=\"golden__button button--bewerbung\">\n\t\t\t\t\t\t\t\t\t\t{formFields.bewerbung_button}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.standort}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block\">\n\t\t\t\t\t\t\t\t\t<a href={`#job-${key}`} onClick={(e) => openBlock(e)}>\n\t\t\t\t\t\t\t\t\t\t<Icon type=\"plus\" />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<form onSubmit={handleSubmit(onSubmit)} id=\"bewerbung\" className=\"career__application\">\n\n\t\t\t\t<h2>{formFields.bewerbung_titel}</h2>\n\n\t\t\t\t<div className=\"contact__step--flexWrapper\">\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_name\">{labels.bewerbung_vorname}*\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmaxlength: 20,\n\t\t\t\t\t\t\t\t\tpattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tname=\"bewerbung_name\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_name\">{labels.bewerbung_name}*\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmaxlength: 20,\n\t\t\t\t\t\t\t\t\tpattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tname=\"bewerbung_surname\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_email\">EMAIL*\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n\t\t\t\t\t\t\t\t\t\tmessage: `UNGÜLTIGE E-MAIL-ADRESSE`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tname=\"bewerbung_email\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_tel\">{labels.bewerbung_telefon}\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tref={\n\t\t\t\t\t\t\t\t\tregister({\n\t\t\t\t\t\t\t\t\t\tmaxlength: 35\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname=\"bewerbung_tel\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_position\" className=\"label__select\">{formFields.bewerbung_frage_1}</label>\n\t\t\t\t\t\t<select name=\"job_position\" ref={register}>\n\t\t\t\t\t\t\t<optgroup>\n\t\t\t\t\t\t\t\t{data.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t\t\t\t<option key={key} value={item.info.titel}>{item.info.titel}, {item.info.standort}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock uploadcv\">\n\t\t\t\t\t\t{/* <MyUploader /> */}\n\t\t\t\t\t\t<div {...getRootProps()}>\n\t\t\t\t\t\t\t<input name=\"uploadedfile\" ref={register} {...getInputProps()} />\n\t\t\t\t\t\t\t<span>{uploadTextParts[0]}</span>\n\t\t\t\t\t\t\t<span>{uploadTextParts[1]}</span>\n\t\t\t\t\t\t\t<span>{`${uploadTextParts[2]} ${uploadTextParts[3]}`}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_status\"\n\t\t\t\t\t\t\tclassName=\"contact__stepblock--inner\">{formFields.bewerbung_frage_2.frage}</label>\n\t\t\t\t\t\t{formFields.bewerbung_frage_2.job_status.map((item, key) => (\n\t\t\t\t\t\t\t<p className=\"contact__stepblock--inner contact__stepblock--career\" key={key}>\n\t\t\t\t\t\t\t\t<input ref={register} className=\"input__radio\" type=\"radio\" name=\"job_status\" value={item.status} />\n\t\t\t\t\t\t\t\t<span className=\"label__radio\">{item.status}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock contact__stepblock--date\">\n\t\t\t\t\t\t<label className=\"contact__stepblock--inner\" htmlFor=\"job_start_date\">{formFields.bewerbung_zeit}</label>\n\t\t\t\t\t\t<DatePicker selected={jobStartDate} onChange={date => setJobStartDate(date)} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_message\">{formFields.bewerbung_nachricht}</label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\tname=\"job_message\"\n\t\t\t\t\t\t\tid=\"job_message\" cols=\"30\" rows=\"5\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock career__submitwrapper\" >\n\n\t\t\t\t\t\t<button type=\"submit\" className=\"golden__button\">{formFields.bewerbung_button}</button>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</form>\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/macbook/repos/goldendoor-next/components/opening/Scene.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSpring, animated } from 'react-spring';\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\n\nconst trans1 = (x, y) => `translate3d(${_parseInt(x / 8)}px,${_parseInt(y / 8)}px,0)`;\n\nconst trans2 = (x, y) => `translate3d(${_parseInt(x / 25 + 5)}px,${_parseInt(y / 10 / 10)}px,0)`; // const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\n// const trans4 = (x, y) > `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\n\nconst Scene = () => {\n  const [properties, setProperties] = useSpring(() => ({\n    xy: [0, 0],\n    config: {\n      mass: 10,\n      friction: 40\n    }\n  }));\n  return __jsx(\"div\", {\n    className: \"scene-container\",\n    onMouseMove: ({\n      clientX: x,\n      clientY: y\n    }) => setProperties({\n      xy: calc(x, y)\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(animated.div, {\n    className: \"card1\",\n    style: {\n      transform: properties.xy.interpolate(trans1)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(animated.div, {\n    className: \"card2\",\n    style: {\n      transform: properties.xy.interpolate(trans2)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nexport default Scene;","map":{"version":3,"sources":["/Users/macbook/repos/goldendoor-next/components/opening/Scene.js"],"names":["useSpring","animated","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","Scene","properties","setProperties","xy","config","mass","friction","clientX","clientY","transform","interpolate"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;AAEA,MAAMC,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAACD,CAAC,GAAGE,MAAM,CAACC,UAAP,GAAoB,CAAzB,EAA4BF,CAAC,GAAGC,MAAM,CAACE,WAAP,GAAqB,CAArD,CAAvB;;AACA,MAAMC,MAAM,GAAG,CAACL,CAAD,EAAIC,CAAJ,KAAW,eAAc,UAASD,CAAC,GAAG,CAAb,CAAgB,MAAK,UAASC,CAAC,GAAG,CAAb,CAAgB,OAA7E;;AACA,MAAMK,MAAM,GAAG,CAACN,CAAD,EAAIC,CAAJ,KAAW,eAAc,UAASD,CAAC,GAAG,EAAJ,GAAS,CAAlB,CAAqB,MAAK,UAAUC,CAAC,GAAG,EAAL,GAAW,EAApB,CAAwB,OAA1F,C,CACA;AACA;;;AAEA,MAAMM,KAAK,GAAG,MAAM;AACnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,SAAS,CAAC,OAAO;AACpDa,IAAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CADgD;AAEpDC,IAAAA,MAAM,EAAE;AACPC,MAAAA,IAAI,EAAE,EADC;AAEPC,MAAAA,QAAQ,EAAE;AAFH;AAF4C,GAAP,CAAD,CAA7C;AAQA,SACC;AACC,IAAA,SAAS,EAAC,iBADX;AAEC,IAAA,WAAW,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAEd,CAAX;AAAce,MAAAA,OAAO,EAAEd;AAAvB,KAAD,KAAgCQ,aAAa,CAAC;AAAEC,MAAAA,EAAE,EAAEX,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAV,KAAD,CAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,MAAC,QAAD,CAAU,GAAV;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAER,UAAU,CAACE,EAAX,CAAcO,WAAd,CAA0BZ,MAA1B;AAAb,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIC,MAAC,QAAD,CAAU,GAAV;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAS,EAAER,UAAU,CAACE,EAAX,CAAcO,WAAd,CAA0BX,MAA1B;AAAb,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CADD;AAQA,CAjBD;;AAmBA,eAAeC,KAAf","sourcesContent":["import { useSpring, animated } from 'react-spring';\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${parseInt(x / 8)}px,${parseInt(y / 8)}px,0)`\nconst trans2 = (x, y) => `translate3d(${parseInt(x / 25 + 5)}px,${parseInt((y / 10) / 10)}px,0)`\n// const trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\n// const trans4 = (x, y) > `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\nconst Scene = () => {\n\tconst [properties, setProperties] = useSpring(() => ({\n\t\txy: [0, 0],\n\t\tconfig: {\n\t\t\tmass: 10,\n\t\t\tfriction: 40\n\t\t}\n\t}));\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"scene-container\"\n\t\t\tonMouseMove={({ clientX: x, clientY: y }) => setProperties({ xy: calc(x, y) })}>\n\t\t\t<animated.div className=\"card1\" style={{ transform: properties.xy.interpolate(trans1) }} />\n\t\t\t<animated.div className=\"card2\" style={{ transform: properties.xy.interpolate(trans2) }} />\n\t\t</div>\n\t)\n};\n\nexport default Scene;"]},"metadata":{},"sourceType":"module"}
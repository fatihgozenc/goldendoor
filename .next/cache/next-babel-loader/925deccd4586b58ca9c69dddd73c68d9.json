{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/layout/Layout';\nimport { DefaultSeo } from 'next-seo';\nimport { API_HOST } from '../config';\n\nfunction GoldenDoor(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      layoutData = _ref.layoutData,\n      pathname = _ref.pathname,\n      lang = _ref.lang;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(DefaultSeo, {\n    openGraph: {\n      type: 'website',\n      locale: 'de_DE',\n      url: 'http://goldendoor.group/',\n      site_name: 'Golden Door Group'\n    }\n  }), __jsx(\"link\", {\n    href: \"https://api.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css\",\n    rel: \"stylesheet\"\n  })), __jsx(Layout, {\n    data: layoutData,\n    pathname: pathname\n  }, __jsx(Component, pageProps)));\n}\n\nGoldenDoor.getInitialProps = function _callee(appContext) {\n  var pathname, lang, response, data, appProps;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = appContext.router.route;\n          lang = pathname.split('/')[1] === 'en' ? 'en' : 'de';\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(API_HOST).concat(lang, \"/layout\")));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          data = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(App.getInitialProps(appContext));\n\n        case 10:\n          appProps = _context.sent;\n          return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n            layoutData: data,\n            pathname: pathname,\n            lang: lang\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default GoldenDoor;","map":{"version":3,"sources":["/Users/macbook/repos/goldendoor-next/pages/_app.js"],"names":["App","Head","fetch","Layout","DefaultSeo","API_HOST","GoldenDoor","Component","pageProps","layoutData","pathname","lang","type","locale","url","site_name","getInitialProps","appContext","router","route","split","response","json","data","appProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,SAASC,UAAT,OAA0E;AAAA,MAApDC,SAAoD,QAApDA,SAAoD;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,QAAkB,QAAlBA,QAAkB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACzE,SACC,4BACC,MAAC,IAAD,QACC,MAAC,UAAD;AACE,IAAA,SAAS,EAAE;AACVC,MAAAA,IAAI,EAAE,SADI;AAEVC,MAAAA,MAAM,EAAE,OAFE;AAGVC,MAAAA,GAAG,EAAE,0BAHK;AAIVC,MAAAA,SAAS,EAAE;AAJD;AADb,IADD,EASC;AAAM,IAAA,IAAI,EAAC,2DAAX;AAAuE,IAAA,GAAG,EAAC;AAA3E,IATD,CADD,EAYC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEN,UAAd;AAA0B,IAAA,QAAQ,EAAEC;AAApC,KACC,MAAC,SAAD,EAAeF,SAAf,CADD,CAZD,CADD;AAkBA;;AAEDF,UAAU,CAACU,eAAX,GAA6B,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBP,UAAAA,QADsB,GACXO,UAAU,CAACC,MAAX,CAAkBC,KADP;AAEtBR,UAAAA,IAFsB,GAEfD,QAAQ,CAACU,KAAT,CAAe,GAAf,EAAoB,CAApB,MAA2B,IAA3B,GAAkC,IAAlC,GAAyC,IAF1B;AAAA;AAAA,2CAGLlB,KAAK,WAAIG,QAAJ,SAAeM,IAAf,aAHA;;AAAA;AAGtBU,UAAAA,QAHsB;AAAA;AAAA,2CAITA,QAAQ,CAACC,IAAT,EAJS;;AAAA;AAItBC,UAAAA,IAJsB;AAAA;AAAA,2CAKLvB,GAAG,CAACgB,eAAJ,CAAoBC,UAApB,CALK;;AAAA;AAKtBO,UAAAA,QALsB;AAAA,6DAMhBA,QANgB;AAMNf,YAAAA,UAAU,EAAEc,IANN;AAMYb,YAAAA,QAAQ,EAARA,QANZ;AAMsBC,YAAAA,IAAI,EAAJA;AANtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AASA,eAAeL,UAAf","sourcesContent":["import App from 'next/app'\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch'\nimport Layout from '../components/layout/Layout';\nimport { DefaultSeo } from 'next-seo';\nimport { API_HOST } from '../config';\n\nfunction GoldenDoor({ Component, pageProps, layoutData, pathname, lang }) {\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<DefaultSeo\n\t\t\t\t\t\topenGraph={{\n\t\t\t\t\t\t\ttype: 'website',\n\t\t\t\t\t\t\tlocale: 'de_DE',\n\t\t\t\t\t\t\turl: 'http://goldendoor.group/',\n\t\t\t\t\t\t\tsite_name: 'Golden Door Group',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t<link href=\"https://api.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css\" rel=\"stylesheet\" />\n\t\t\t</Head>\n\t\t\t<Layout data={layoutData} pathname={pathname}>\n\t\t\t\t<Component {...pageProps} />\n\t\t\t</Layout>\n\t\t</>\n\t)\n}\n\nGoldenDoor.getInitialProps = async (appContext) => {\n\tconst pathname = appContext.router.route\n\tconst lang = pathname.split('/')[1] === 'en' ? 'en' : 'de';\n\tconst response = await fetch(`${API_HOST}${lang}/layout`)\n\tconst data = await response.json()\n\tconst appProps = await App.getInitialProps(appContext);\n\treturn { ...appProps, layoutData: data, pathname, lang }\n}\n\nexport default GoldenDoor;"]},"metadata":{},"sourceType":"module"}
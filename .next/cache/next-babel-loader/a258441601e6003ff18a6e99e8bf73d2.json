{"ast":null,"code":"import _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport Breadcrumb from '../../Breadcrumb';\nimport parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport './style.scss';\nvar MapContainer = dynamic(function () {\n  return import('../../mapcontainer');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../mapcontainer')];\n    },\n    modules: ['../../mapcontainer']\n  }\n});\nexport default (function (_ref) {\n  var data = _ref.data;\n  // const contactInfo = useSelector(state => state.layout.footer.info);\n  var steps = [data.fields.kontakt_stufe_1, data.fields.kontakt_stufe_2, data.fields.kontakt_stufe_3];\n\n  var _React$useState = React.useState(new Date()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      eventDate = _React$useState2[0],\n      setEventDate = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Date()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      elusiveDate = _React$useState4[0],\n      setElusiveDate = _React$useState4[1];\n\n  var _React$useState5 = React.useState(new Date()),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      beginTime = _React$useState6[0],\n      setBeginTime = _React$useState6[1];\n\n  var _React$useState7 = React.useState(new Date()),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      endTime = _React$useState8[0],\n      setEndTime = _React$useState8[1];\n\n  var formSteps = React.useRef();\n  var stepSlider = React.useRef();\n  var dateRange = React.useRef();\n  var dates = React.useRef();\n\n  var changeStep = function changeStep(e) {\n    var ellipses = formSteps.current.parentElement.parentElement.firstElementChild.children;\n\n    if (e.currentTarget.classList.contains('goFirst')) {\n      formSteps.current.classList.remove('atSecondStep');\n      ellipses[1].classList.remove('activeStep');\n      ellipses[0].classList.add('activeStep');\n    } else if (e.currentTarget.classList.contains('goNext')) {\n      formSteps.current.classList.remove('atSecondStep');\n      formSteps.current.classList.add('atThirdStep');\n      ellipses[1].classList.remove('activeStep');\n      ellipses[2].classList.add('activeStep');\n    } else if (e.currentTarget.classList.contains('goSecond')) {\n      formSteps.current.classList.remove('atThirdStep');\n      formSteps.current.classList.add('atSecondStep');\n      ellipses[2].classList.remove('activeStep');\n      ellipses[1].classList.add('activeStep');\n    } else {\n      formSteps.current.classList.add('atSecondStep');\n      ellipses[0].classList.remove('activeStep');\n      ellipses[1].classList.add('activeStep');\n    }\n  };\n\n  var hideDates = function hideDates(e) {\n    var answerYes = e.currentTarget.parentElement.parentElement.children[1].firstElementChild;\n\n    if (answerYes.checked) {\n      dates.current.classList.remove('hidden');\n      dateRange.current.classList.add('hidden');\n    } else {\n      dates.current.classList.add('hidden');\n      dateRange.current.classList.remove('hidden');\n    }\n  };\n\n  React.useEffect(function () {\n    stepSlider.current.firstElementChild.classList.add('activeStep'); // dates.current.classList.add('hideDates')\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"page__title page__title--contact\"\n  }, __jsx(Breadcrumb, {\n    slug: data.slug,\n    title: data.title\n  }), __jsx(\"h1\", null, data.title)), __jsx(\"div\", {\n    className: \"contact\"\n  }, __jsx(\"div\", {\n    ref: stepSlider,\n    className: \"contact__stepslider\"\n  }, steps.map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key,\n      className: \"contact__stepslider--ellipse\"\n    }, __jsx(\"span\", null, key + 1));\n  })), __jsx(\"div\", {\n    className: \"contact--wrapper\"\n  }, __jsx(\"form\", {\n    className: \"contact__steps\",\n    ref: formSteps\n  }, __jsx(\"div\", {\n    className: \"contact__step\"\n  }, __jsx(\"div\", {\n    className: \"contact__step--flexWrapper\"\n  }, __jsx(\"div\", {\n    className: \"contact__stepblock\"\n  }, __jsx(\"label\", {\n    htmlFor: \"event_type\",\n    className: \"label__select\"\n  }, steps[0].kontakt_frage_1.frage), __jsx(\"select\", {\n    id: \"event_type\"\n  }, __jsx(\"optgroup\", null, steps[0].kontakt_frage_1.optionen.map(function (item, key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: item.option\n    }, item.option);\n  })))), __jsx(\"div\", {\n    className: \"contact__stepblock\"\n  }, __jsx(\"label\", {\n    htmlFor: \"event_location\",\n    className: \"label__select\"\n  }, steps[0].kontakt_frage_2.frage), __jsx(\"select\", {\n    id: \"event_location\"\n  }, __jsx(\"optgroup\", null, steps[0].kontakt_frage_2.optionen.map(function (item, key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: item.option\n    }, item.option);\n  }))))), __jsx(\"div\", {\n    className: \"contact__step--flexWrapper-xl\"\n  }, __jsx(\"div\", {\n    className: \"contact__stepblock\"\n  }, __jsx(\"label\", {\n    htmlFor: \"event_date_answer\",\n    className: \"contact__stepblock--inner\"\n  }, steps[0].kontakt_frage_3.frage), steps[0].kontakt_frage_3.optionen.map(function (item, key) {\n    return __jsx(\"p\", {\n      className: \"contact__stepblock--inner\",\n      key: key\n    }, __jsx(\"input\", {\n      onClick: hideDates,\n      className: \"input__radio\",\n      type: \"radio\",\n      name: \"event_date_answer\",\n      value: item.option\n    }), __jsx(\"span\", {\n      className: \"label__radio\"\n    }, item.option));\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    ref: dateRange\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"date_range\"\n  }, steps[0].kontakt_frage_5), __jsx(\"input\", {\n    className: \"input__text\",\n    required: true,\n    type: \"text\",\n    id: \"event_date_answer\"\n  })), __jsx(\"div\", {\n    ref: dates,\n    className: \"contact__stepblock contact__stepblock--datewrapper hidden\"\n  }, __jsx(\"div\", {\n    className: \"contact__stepblock--date\"\n  }, __jsx(\"label\", {\n    htmlFor: \"date_of_event\"\n  }, steps[0].kontakt_frage_6.datum), __jsx(DatePicker, {\n    selected: eventDate,\n    onChange: function onChange(date) {\n      return setEventDate(date);\n    }\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock--date\"\n  }, __jsx(\"label\", {\n    htmlFor: \"date_of_elusive\"\n  }, steps[0].kontakt_frage_6.ausweichtermin), __jsx(DatePicker, {\n    selected: elusiveDate,\n    onChange: function onChange(date) {\n      return setElusiveDate(date);\n    }\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock--date\"\n  }, __jsx(\"label\", {\n    htmlFor: \"date_of_elusive\"\n  }, steps[0].kontakt_frage_6.beginn), __jsx(DatePicker, {\n    showTimeSelect: true,\n    showTimeSelectOnly: true,\n    timeIntervals: 15,\n    timeCaption: \"Time\",\n    dateFormat: \"h:mm aa\",\n    selected: beginTime,\n    onChange: function onChange(date) {\n      return setBeginTime(date);\n    }\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock--date\"\n  }, __jsx(\"label\", {\n    htmlFor: \"date_of_elusive\"\n  }, steps[0].kontakt_frage_6.ende), __jsx(DatePicker, {\n    showTimeSelect: true,\n    showTimeSelectOnly: true,\n    timeIntervals: 15,\n    timeCaption: \"Time\",\n    dateFormat: \"h:mm aa\",\n    selected: endTime,\n    onChange: function onChange(date) {\n      return setEndTime(date);\n    }\n  })))), __jsx(\"a\", {\n    href: \"#\",\n    className: \"golden__button golden__button--center\",\n    onClick: changeStep\n  }, data.fields.buttonfelder.prufen)), __jsx(\"div\", {\n    className: \"contact__step\"\n  }, __jsx(\"h3\", null, steps[1].feld_1.titel), __jsx(\"div\", {\n    className: \"contact__step--wrapper\"\n  }, __jsx(\"div\", {\n    className: \"contact__step--flexWrapper\"\n  }, __jsx(\"div\", {\n    className: \"contact__stepblock\"\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"people_number\"\n  }, steps[1].feld_1.frage_1), __jsx(\"input\", {\n    type: \"text\",\n    required: true,\n    className: \"input__text\",\n    name: \"people_number\"\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock\"\n  }, __jsx(\"label\", {\n    htmlFor: \"event_budget\",\n    className: \"contact__stepblock--inner\"\n  }, steps[1].feld_1.frage_2.fragefeld), _Object$values(steps[1].feld_1.frage_2.optionen).map(function (item, key) {\n    return __jsx(\"p\", {\n      className: \"contact__stepblock--inner\",\n      key: key\n    }, __jsx(\"input\", {\n      type: \"radio\",\n      className: \"input__radio\",\n      name: \"event_budget\",\n      value: item\n    }), __jsx(\"span\", {\n      className: \"label__radio\"\n    }, item));\n  }))), __jsx(\"h3\", null, steps[1].feld_2.titel), __jsx(\"div\", {\n    className: \"contact__step--flexWrapper-xl\"\n  }, _Object$values(steps[1].feld_2).slice(1).map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key,\n      className: \"contact__stepblock\"\n    }, __jsx(\"label\", {\n      htmlFor: \"event_\".concat(item.fragefeld.toLowerCase()),\n      className: \"label__select\"\n    }, item.fragefeld), __jsx(\"select\", {\n      name: \"event_\".concat(item.fragefeld.toLowerCase())\n    }, item.optionen.map(function (subItem, subKey) {\n      return __jsx(\"option\", {\n        key: subKey,\n        value: subItem.option\n      }, subItem.option);\n    })));\n  }))), __jsx(\"div\", {\n    className: \"contact__buttongroup\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: changeStep,\n    className: \"golden__button goFirst\"\n  }, data.fields.buttonfelder.zuruck), __jsx(\"a\", {\n    href: \"#\",\n    onClick: changeStep,\n    className: \"golden__button goNext\"\n  }, data.fields.buttonfelder.weiter))), __jsx(\"div\", {\n    className: \"contact__step\"\n  }, __jsx(\"h3\", null, steps[2].titel), __jsx(\"div\", {\n    className: \"contact__step--flexWrapper\"\n  }, __jsx(\"div\", {\n    className: \"contact__stepblock\"\n  }, __jsx(\"label\", {\n    htmlFor: \"event_location\",\n    className: \"label__select\"\n  }, steps[2].anredefeld.frage), __jsx(\"select\", {\n    name: \"event_location\"\n  }, steps[2].anredefeld.sex.map(function (item, key) {\n    return __jsx(\"option\", {\n      key: key,\n      value: item.option\n    }, item.option);\n  }))), _Object$values(steps[2].andere_fragen).map(function (item, key) {\n    return __jsx(\"div\", {\n      key: key,\n      className: \"contact__stepblock\"\n    }, __jsx(\"label\", {\n      className: \"label__text\",\n      htmlFor: \"contactdata_\".concat(item)\n    }, item), key === 0 | 4 ? __jsx(\"input\", {\n      className: \"input__text\",\n      type: \"text\",\n      id: \"contactdata_\".concat(item.toLowerCase()),\n      name: \"contactdata_\".concat(item.toLowerCase())\n    }) : __jsx(\"input\", {\n      required: true,\n      className: \"input__text\",\n      type: \"text\",\n      id: \"contactdata_\".concat(item.toLowerCase()),\n      name: \"contactdata_\".concat(item.toLowerCase())\n    }));\n  }), __jsx(\"div\", {\n    className: \"contact__stepblock\"\n  }, __jsx(\"label\", {\n    htmlFor: \"event__nachricht\"\n  }, steps[0].kontakt_frage_4), __jsx(\"textarea\", {\n    name: \"event__nachricht\",\n    id: \"event__nachricht\",\n    cols: \"30\",\n    rows: \"5\"\n  }))), __jsx(\"div\", {\n    className: \"contact__buttongroup\"\n  }, __jsx(\"a\", {\n    href: \"#\",\n    onClick: changeStep,\n    className: \"golden__button goSecond\"\n  }, data.fields.buttonfelder.zuruck), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\"\n  }, data.fields.buttonfelder.senden)))))), __jsx(\"div\", {\n    className: \"contact__info\"\n  }, __jsx(\"div\", {\n    className: \"contact__info--map\"\n  }, __jsx(MapContainer, null))));\n});","map":null,"metadata":{},"sourceType":"module"}
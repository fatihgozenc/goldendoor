{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/urbandruid/repos/goldendoor-next/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/layout/Layout';\nimport { API_HOST } from '../config';\n\nfunction GoldenDoor(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      layoutData = _ref.layoutData,\n      pathname = _ref.pathname;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"link\", {\n    href: \"https://api.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), __jsx(Layout, {\n    data: layoutData,\n    pathname: pathname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))));\n}\n\nGoldenDoor.getInitialProps = function _callee(appContext) {\n  var pathname, lang, response, data, appProps;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pathname = appContext.ctx.asPath;\n          lang = appContext.ctx.asPath.split('/')[1] === 'en' ? 'en' : 'de';\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(API_HOST).concat(lang, \"/layout\")));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          data = _context.sent;\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(App.getInitialProps(appContext));\n\n        case 10:\n          appProps = _context.sent;\n          return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n            layoutData: data,\n            pathname: pathname\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default GoldenDoor;","map":{"version":3,"sources":["/home/urbandruid/repos/goldendoor-next/pages/_app.js"],"names":["App","Head","fetch","Layout","API_HOST","GoldenDoor","Component","pageProps","layoutData","pathname","getInitialProps","appContext","ctx","asPath","lang","split","response","json","data","appProps"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,SAASC,UAAT,OAAoE;AAAA,MAA9CC,SAA8C,QAA9CA,SAA8C;AAAA,MAAnCC,SAAmC,QAAnCA,SAAmC;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACnE,SACC,4BACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAM,IAAA,IAAI,EAAC,2DAAX;AAAuE,IAAA,GAAG,EAAC,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,EAKC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,UAAd;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CALD,CADD;AAWA;;AAEDF,UAAU,CAACK,eAAX,GAA6B,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBF,UAAAA,QADsB,GACXE,UAAU,CAACC,GAAX,CAAeC,MADJ;AAEtBC,UAAAA,IAFsB,GAEfH,UAAU,CAACC,GAAX,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,MAAwC,IAAxC,GAA+C,IAA/C,GAAsD,IAFvC;AAAA;AAAA,2CAGLb,KAAK,WAAIE,QAAJ,SAAeU,IAAf,aAHA;;AAAA;AAGtBE,UAAAA,QAHsB;AAAA;AAAA,2CAITA,QAAQ,CAACC,IAAT,EAJS;;AAAA;AAItBC,UAAAA,IAJsB;AAAA;AAAA,2CAKLlB,GAAG,CAACU,eAAJ,CAAoBC,UAApB,CALK;;AAAA;AAKtBQ,UAAAA,QALsB;AAAA,6DAMhBA,QANgB;AAMNX,YAAAA,UAAU,EAAEU,IANN;AAMYT,YAAAA,QAAQ,EAARA;AANZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AASA,eAAeJ,UAAf","sourcesContent":["import App from 'next/app'\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch'\nimport Layout from '../components/layout/Layout';\nimport { API_HOST } from '../config';\n\nfunction GoldenDoor({ Component, pageProps, layoutData, pathname }) {\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<link href=\"https://api.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css\" rel=\"stylesheet\" />\n\t\t\t</Head>\n\n\t\t\t<Layout data={layoutData} pathname={pathname}>\n\t\t\t\t<Component {...pageProps} />\n\t\t\t</Layout>\n\t\t</>\n\t)\n}\n\nGoldenDoor.getInitialProps = async (appContext) => {\n\tconst pathname = appContext.ctx.asPath\n\tconst lang = appContext.ctx.asPath.split('/')[1] === 'en' ? 'en' : 'de';\n\tconst response = await fetch(`${API_HOST}${lang}/layout`)\n\tconst data = await response.json()\n\tconst appProps = await App.getInitialProps(appContext);\n\treturn { ...appProps, layoutData: data, pathname }\n}\n\nexport default GoldenDoor;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nconst nodemailer = require('nodemailer');\n\nconst fs = require('fs');\n\nconst transporter = nodemailer.createTransport({\n  pool: true,\n  host: \"smtprelaypool.ispgateway.de\",\n  port: 465,\n  secure: true,\n  // use TLS\n  auth: {\n    user: 'f.gozenc@narciss-taurus.de',\n    pass: '1rk3n84L>h8c'\n  }\n});\nconst reader = new FileReader();\n\nconst send = props => {\n  console.log(props);\n  console.log(reader.readAsArrayBuffer(props.attachment_buffer));\n  console.log(new TextEncoder(\"utf-8\").encode(props.attachment_buffer));\n  const name = props.contactType == 'contactForm' ? props.kontakt_name + \" \" + props.kontakt_surname : props.name + ' ' + props.surname;\n  const email = props.contactType == 'contactForm' ? props.kontakt_email : props.email;\n\n  const text = () => {\n    if (props.contactType == 'contactForm') {\n      return `\n\t\t\t\t\\r\\nKontaktdaten\\r\\n\n\t\t\t\tAnrede: ${props.kontakt_anrede}\\r\\n\n\t\t\t\tVorname: ${props.kontakt_name}\\r\\n\n\t\t\t\tNachname: ${props.kontakt_surname}\\r\\n\n\t\t\t\tE-Mail: ${props.kontakt_email}\\r\\n\n\t\t\t\tTelefon: ${props.kontakt_phone}\\r\\n\n\t\t\t\tFirma: ${props.kontakt_company}\\r\\n\n\t\t\t\tNachricht: ${props.event_nachricht}\\r\\n\n\t\t\t\t\\r\\nEventinformationen\\r\\n\n\t\t\t\tArt der Veranstaltung: ${props.event_type}\\r\\n\n\t\t\t\tLocation Auswahl: ${props.event_location}\\r\\n\n\t\t\t\tKonkretes Datum?: ${props.event_date_answer}\\r\\n\n\t\t\t\tZeitraum (Wenn es kein konkretes Datum gibt): ${props.date_range}\\r\\n\n\t\t\t\tEvent Datum (Wenn es ein konkretes Datum gibt): ${props.eventdatum}\\r\\n\n\t\t\t\tEvent Ausweichtermin (Wenn es ein konkretes Datum gibt): ${props.ausweichtermin}\\r\\n\n\t\t\t\tEvent Beginn Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitbeginn}\\r\\n\n\t\t\t\tEvent Ende Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitend}\\r\\n\n\t\t\t\t\\r\\nZusatzinformationen\\r\\n\n\t\t\t\tAnzahl der Personen: ${props.personenzahl}\\r\\n\n\t\t\t\tMaximal Budget?: ${props.event_max_budget}\\r\\n\n\t\t\t\t\\r\\nGewünschte dienstleistungen\\r\\n\n\t\t\t\tSpeisenauswahl: ${props.lang === 'de' ? props.event_speisen : props.event_food}\\r\\n\n\t\t\t\tMobiliarauswahl: ${props.lang === 'de' ? props.event_mobiliar : props.event_furnishings}\\r\\n\n\t\t\t\tTechnikauswahl: ${props.lang === 'de' ? props.event_technik : props.event_technique}\\r\\n\n\t\t\t\tDekoauswahl: ${props.lang === 'de' ? props.event_deko : props.event_decoration}\\r\\n\n\t\t\t\tMusikauswahl: ${props.lang === 'de' ? props.event_musik : props.event_music}\\r\\n\n\t\t\t`;\n    } else if (props.contactType == 'keyRequest') {\n      return `\n\t\t\t\t\\r\\nSchlüsselanfrage für Pressekit\\r\\n\\nVorname: ${props.name}\\r\\nNachname: ${props.surname}\\r\\nE-Mail: ${props.email}\\r\\n\n\t\t\t`;\n    } else {\n      return `\n\t\t\t\t\\r\\nKarriere Bewerbung\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t\tBerufliche Stellung: ${props.position}\\r\\n\n\t\t\t\tAktueller Jobsstatus: ${props.jobstatus}\\r\\n\n\t\t\t\tMögliches Start-Datum: ${props.startdate}\\r\\n\n\t\t\t\tNachricht: ${props.message}\\r\\n\n\t\t\t`;\n    }\n  };\n\n  const content = text();\n  const uploadedFile = props.contactType == 'contactForm' || props.contactType == 'keyRequest' ? null : [{\n    filename: props.attachment_name,\n    content: new TextEncoder(\"utf-8\").encode(props.attachment_buffer)\n  }];\n  const sender = `${name} <${email}>`;\n  const message = {\n    from: 'f.gozenc@narciss-taurus.de',\n    to: 'f.gozenc@narciss-taurus.de',\n    subject: `Neu Nachricht von ${sender}`,\n    text: content,\n    attachments: uploadedFile,\n    replyTo: sender\n  };\n  return new _Promise((resolve, reject) => {\n    transporter.sendMail(message, (error, info) => error ? reject(error) : resolve(info));\n  });\n};\n\nmodule.exports = send;","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/kontaktMailer.js"],"names":["nodemailer","require","fs","transporter","createTransport","pool","host","port","secure","auth","user","pass","reader","FileReader","send","props","console","log","readAsArrayBuffer","attachment_buffer","TextEncoder","encode","name","contactType","kontakt_name","kontakt_surname","surname","email","kontakt_email","text","kontakt_anrede","kontakt_phone","kontakt_company","event_nachricht","event_type","event_location","event_date_answer","date_range","eventdatum","ausweichtermin","eventzeitbeginn","eventzeitend","personenzahl","event_max_budget","lang","event_speisen","event_food","event_mobiliar","event_furnishings","event_technik","event_technique","event_deko","event_decoration","event_musik","event_music","position","jobstatus","startdate","message","content","uploadedFile","filename","attachment_name","sender","from","to","subject","attachments","replyTo","resolve","reject","sendMail","error","info","module","exports"],"mappings":"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","sourcesContent":["const nodemailer = require('nodemailer')\nconst fs = require('fs');\nconst transporter = nodemailer.createTransport({\n\tpool: true,\n\thost: \"smtprelaypool.ispgateway.de\",\n\tport: 465,\n\tsecure: true, // use TLS\n\tauth: {\n\t\tuser: 'f.gozenc@narciss-taurus.de',\n\t\tpass: '1rk3n84L>h8c'\n\t}\n});\nconst reader = new FileReader()\n\nconst send = (props) => {\n\tconsole.log(props)\n\n\tconsole.log(reader.readAsArrayBuffer(props.attachment_buffer))\n\tconsole.log(new TextEncoder(\"utf-8\").encode(props.attachment_buffer))\n\tconst name = props.contactType == 'contactForm' ? (props.kontakt_name + \" \" + props.kontakt_surname) : props.name + ' ' + props.surname;\n\tconst email = props.contactType == 'contactForm' ? props.kontakt_email : props.email;\n\tconst text = () => {\n\t\tif (props.contactType == 'contactForm') {\n\t\t\treturn (`\n\t\t\t\t\\r\\nKontaktdaten\\r\\n\n\t\t\t\tAnrede: ${props.kontakt_anrede}\\r\\n\n\t\t\t\tVorname: ${props.kontakt_name}\\r\\n\n\t\t\t\tNachname: ${props.kontakt_surname}\\r\\n\n\t\t\t\tE-Mail: ${props.kontakt_email}\\r\\n\n\t\t\t\tTelefon: ${props.kontakt_phone}\\r\\n\n\t\t\t\tFirma: ${props.kontakt_company}\\r\\n\n\t\t\t\tNachricht: ${props.event_nachricht}\\r\\n\n\t\t\t\t\\r\\nEventinformationen\\r\\n\n\t\t\t\tArt der Veranstaltung: ${props.event_type}\\r\\n\n\t\t\t\tLocation Auswahl: ${props.event_location}\\r\\n\n\t\t\t\tKonkretes Datum?: ${props.event_date_answer}\\r\\n\n\t\t\t\tZeitraum (Wenn es kein konkretes Datum gibt): ${props.date_range}\\r\\n\n\t\t\t\tEvent Datum (Wenn es ein konkretes Datum gibt): ${props.eventdatum}\\r\\n\n\t\t\t\tEvent Ausweichtermin (Wenn es ein konkretes Datum gibt): ${props.ausweichtermin}\\r\\n\n\t\t\t\tEvent Beginn Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitbeginn}\\r\\n\n\t\t\t\tEvent Ende Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitend}\\r\\n\n\t\t\t\t\\r\\nZusatzinformationen\\r\\n\n\t\t\t\tAnzahl der Personen: ${props.personenzahl}\\r\\n\n\t\t\t\tMaximal Budget?: ${props.event_max_budget}\\r\\n\n\t\t\t\t\\r\\nGewünschte dienstleistungen\\r\\n\n\t\t\t\tSpeisenauswahl: ${props.lang === 'de' ? props.event_speisen : props.event_food}\\r\\n\n\t\t\t\tMobiliarauswahl: ${props.lang === 'de' ? props.event_mobiliar : props.event_furnishings}\\r\\n\n\t\t\t\tTechnikauswahl: ${props.lang === 'de' ? props.event_technik : props.event_technique}\\r\\n\n\t\t\t\tDekoauswahl: ${props.lang === 'de' ? props.event_deko : props.event_decoration}\\r\\n\n\t\t\t\tMusikauswahl: ${props.lang === 'de' ? props.event_musik : props.event_music}\\r\\n\n\t\t\t`)\n\t\t} else if (props.contactType == 'keyRequest') {\n\t\t\treturn (`\n\t\t\t\t\\r\\nSchlüsselanfrage für Pressekit\\r\\n\\nVorname: ${props.name}\\r\\nNachname: ${props.surname}\\r\\nE-Mail: ${props.email}\\r\\n\n\t\t\t`)\n\t\t} else {\n\t\t\treturn (`\n\t\t\t\t\\r\\nKarriere Bewerbung\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t\tBerufliche Stellung: ${props.position}\\r\\n\n\t\t\t\tAktueller Jobsstatus: ${props.jobstatus}\\r\\n\n\t\t\t\tMögliches Start-Datum: ${props.startdate}\\r\\n\n\t\t\t\tNachricht: ${props.message}\\r\\n\n\t\t\t`)\n\t\t}\n\t};\n\n\tconst content = text();\n\n\n\tconst uploadedFile =\n\t\tprops.contactType == 'contactForm' || props.contactType == 'keyRequest' ? null : [{\n\t\t\tfilename: props.attachment_name,\n\t\t\tcontent: new TextEncoder(\"utf-8\").encode(props.attachment_buffer)\n\t\t}]\n\tconst sender = `${name} <${email}>`;\n\tconst message = {\n\t\tfrom: 'f.gozenc@narciss-taurus.de',\n\t\tto: 'f.gozenc@narciss-taurus.de',\n\t\tsubject: `Neu Nachricht von ${sender}`,\n\t\ttext: content,\n\t\tattachments: uploadedFile,\n\t\treplyTo: sender\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\ttransporter.sendMail(message, (error, info) =>\n\t\t\terror ? reject(error) : resolve(info)\n\t\t)\n\t})\n}\n\nmodule.exports = send"]},"metadata":{},"sourceType":"script"}
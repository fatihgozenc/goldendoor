{"ast":null,"code":"var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nconst nodemailer = require('nodemailer');\n\nconst fs = require('fs');\n\nconst transporter = nodemailer.createTransport({\n  pool: true,\n  host: \"smtprelaypool.ispgateway.de\",\n  port: 465,\n  secure: true,\n  // use TLS\n  auth: {\n    user: 'f.gozenc@narciss-taurus.de',\n    pass: '1rk3n84L>h8c'\n  }\n});\n\nconst send = props => {\n  const name = props.contactType == 'contactForm' ? props.kontakt_name + \" \" + props.kontakt_surname : props.name + ' ' + props.surname;\n  const email = props.contactType == 'contactForm' ? props.kontakt_email : props.email;\n\n  const text = () => {\n    if (props.contactType == 'contactForm') {\n      return `\n\t\t\t\t\\r\\nKontaktdaten\\r\\n\n\t\t\t\tAnrede: ${props.kontakt_anrede}\\r\\n\n\t\t\t\tVorname: ${props.kontakt_name}\\r\\n\n\t\t\t\tNachname: ${props.kontakt_surname}\\r\\n\n\t\t\t\tE-Mail: ${props.kontakt_email}\\r\\n\n\t\t\t\tTelefon: ${props.kontakt_phone}\\r\\n\n\t\t\t\tFirma: ${props.kontakt_company}\\r\\n\n\t\t\t\tNachricht: ${props.event_nachricht}\\r\\n\n\t\t\t\t\\r\\nEventinformationen\\r\\n\n\t\t\t\tArt der Veranstaltung: ${props.event_type}\\r\\n\n\t\t\t\tLocation Auswahl: ${props.event_location}\\r\\n\n\t\t\t\tKonkretes Datum?: ${props.event_date_answer}\\r\\n\n\t\t\t\tZeitraum (Wenn es kein konkretes Datum gibt): ${props.date_range}\\r\\n\n\t\t\t\tEvent Datum (Wenn es ein konkretes Datum gibt): ${props.eventdatum}\\r\\n\n\t\t\t\tEvent Ausweichtermin (Wenn es ein konkretes Datum gibt): ${props.ausweichtermin}\\r\\n\n\t\t\t\tEvent Beginn Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitbeginn}\\r\\n\n\t\t\t\tEvent Ende Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitend}\\r\\n\n\t\t\t\t\\r\\nZusatzinformationen\\r\\n\n\t\t\t\tAnzahl der Personen: ${props.personenzahl}\\r\\n\n\t\t\t\tMaximal Budget?: ${props.event_max_budget}\\r\\n\n\t\t\t\t\\r\\nGewünschte dienstleistungen\\r\\n\n\t\t\t\tSpeisenauswahl: ${props.lang === 'de' ? props.event_speisen : props.event_food}\\r\\n\n\t\t\t\tMobiliarauswahl: ${props.lang === 'de' ? props.event_mobiliar : props.event_furnishings}\\r\\n\n\t\t\t\tTechnikauswahl: ${props.lang === 'de' ? props.event_technik : props.event_technique}\\r\\n\n\t\t\t\tDekoauswahl: ${props.lang === 'de' ? props.event_deko : props.event_decoration}\\r\\n\n\t\t\t\tMusikauswahl: ${props.lang === 'de' ? props.event_musik : props.event_music}\\r\\n\n\t\t\t`;\n    } else if (props.contactType == 'keyRequest') {\n      return `\n\t\t\t\t\\r\\nSchlüsselanfrage für Pressekit\\r\\n\\nVorname: ${props.name}\\r\\nNachname: ${props.surname}\\r\\nE-Mail: ${props.email}\\r\\n\n\t\t\t`;\n    } else {\n      return `\n\t\t\t\t\\r\\nKarriere Bewerbung\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t\tBerufliche Stellung: ${props.position}\\r\\n\n\t\t\t\tAktueller Jobsstatus: ${props.jobstatus}\\r\\n\n\t\t\t\tMögliches Start-Datum: ${props.startdate}\\r\\n\n\t\t\t\tNachricht: ${props.message}\\r\\n\n\t\t\t`;\n    }\n  };\n\n  const content = text();\n  console.log(props.attachment.buffer);\n  const uploadedFile = props.contactType == 'contactForm' || props.contactType == 'keyRequest' ? null : [{\n    filename: props.attachment.file.name,\n    content: fs.readFile(props.attachment.file.path, \"utf8\", function (err, data) {\n      console.log(err);\n    }),\n    encoding: 'binary'\n  }];\n  const sender = `${name} <${email}>`;\n  const message = {\n    from: 'f.gozenc@narciss-taurus.de',\n    to: 'f.gozenc@narciss-taurus.de',\n    subject: `Neu Nachricht von ${sender}`,\n    text: content,\n    attachments: uploadedFile,\n    replyTo: sender\n  };\n  return new _Promise((resolve, reject) => {\n    transporter.sendMail(message, (error, info) => error ? reject(error) : resolve(info));\n  });\n};\n\nmodule.exports = send;","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/kontaktMailer.js"],"names":["nodemailer","require","fs","transporter","createTransport","pool","host","port","secure","auth","user","pass","send","props","name","contactType","kontakt_name","kontakt_surname","surname","email","kontakt_email","text","kontakt_anrede","kontakt_phone","kontakt_company","event_nachricht","event_type","event_location","event_date_answer","date_range","eventdatum","ausweichtermin","eventzeitbeginn","eventzeitend","personenzahl","event_max_budget","lang","event_speisen","event_food","event_mobiliar","event_furnishings","event_technik","event_technique","event_deko","event_decoration","event_musik","event_music","position","jobstatus","startdate","message","content","console","log","attachment","buffer","uploadedFile","filename","file","readFile","path","err","data","encoding","sender","from","to","subject","attachments","replyTo","resolve","reject","sendMail","error","info","module","exports"],"mappings":"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","sourcesContent":["const nodemailer = require('nodemailer')\nconst fs = require('fs');\nconst transporter = nodemailer.createTransport({\n\tpool: true,\n\thost: \"smtprelaypool.ispgateway.de\",\n\tport: 465,\n\tsecure: true, // use TLS\n\tauth: {\n\t\tuser: 'f.gozenc@narciss-taurus.de',\n\t\tpass: '1rk3n84L>h8c'\n\t}\n});\n\nconst send = (props) => {\n\tconst name = props.contactType == 'contactForm' ? (props.kontakt_name + \" \" + props.kontakt_surname) : props.name + ' ' + props.surname;\n\tconst email = props.contactType == 'contactForm' ? props.kontakt_email : props.email;\n\tconst text = () => {\n\t\tif (props.contactType == 'contactForm') {\n\t\t\treturn (`\n\t\t\t\t\\r\\nKontaktdaten\\r\\n\n\t\t\t\tAnrede: ${props.kontakt_anrede}\\r\\n\n\t\t\t\tVorname: ${props.kontakt_name}\\r\\n\n\t\t\t\tNachname: ${props.kontakt_surname}\\r\\n\n\t\t\t\tE-Mail: ${props.kontakt_email}\\r\\n\n\t\t\t\tTelefon: ${props.kontakt_phone}\\r\\n\n\t\t\t\tFirma: ${props.kontakt_company}\\r\\n\n\t\t\t\tNachricht: ${props.event_nachricht}\\r\\n\n\t\t\t\t\\r\\nEventinformationen\\r\\n\n\t\t\t\tArt der Veranstaltung: ${props.event_type}\\r\\n\n\t\t\t\tLocation Auswahl: ${props.event_location}\\r\\n\n\t\t\t\tKonkretes Datum?: ${props.event_date_answer}\\r\\n\n\t\t\t\tZeitraum (Wenn es kein konkretes Datum gibt): ${props.date_range}\\r\\n\n\t\t\t\tEvent Datum (Wenn es ein konkretes Datum gibt): ${props.eventdatum}\\r\\n\n\t\t\t\tEvent Ausweichtermin (Wenn es ein konkretes Datum gibt): ${props.ausweichtermin}\\r\\n\n\t\t\t\tEvent Beginn Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitbeginn}\\r\\n\n\t\t\t\tEvent Ende Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitend}\\r\\n\n\t\t\t\t\\r\\nZusatzinformationen\\r\\n\n\t\t\t\tAnzahl der Personen: ${props.personenzahl}\\r\\n\n\t\t\t\tMaximal Budget?: ${props.event_max_budget}\\r\\n\n\t\t\t\t\\r\\nGewünschte dienstleistungen\\r\\n\n\t\t\t\tSpeisenauswahl: ${props.lang === 'de' ? props.event_speisen : props.event_food}\\r\\n\n\t\t\t\tMobiliarauswahl: ${props.lang === 'de' ? props.event_mobiliar : props.event_furnishings}\\r\\n\n\t\t\t\tTechnikauswahl: ${props.lang === 'de' ? props.event_technik : props.event_technique}\\r\\n\n\t\t\t\tDekoauswahl: ${props.lang === 'de' ? props.event_deko : props.event_decoration}\\r\\n\n\t\t\t\tMusikauswahl: ${props.lang === 'de' ? props.event_musik : props.event_music}\\r\\n\n\t\t\t`)\n\t\t} else if (props.contactType == 'keyRequest') {\n\t\t\treturn (`\n\t\t\t\t\\r\\nSchlüsselanfrage für Pressekit\\r\\n\\nVorname: ${props.name}\\r\\nNachname: ${props.surname}\\r\\nE-Mail: ${props.email}\\r\\n\n\t\t\t`)\n\t\t} else {\n\t\t\treturn (`\n\t\t\t\t\\r\\nKarriere Bewerbung\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t\tBerufliche Stellung: ${props.position}\\r\\n\n\t\t\t\tAktueller Jobsstatus: ${props.jobstatus}\\r\\n\n\t\t\t\tMögliches Start-Datum: ${props.startdate}\\r\\n\n\t\t\t\tNachricht: ${props.message}\\r\\n\n\t\t\t`)\n\t\t}\n\t};\n\n\tconst content = text();\n\n\tconsole.log(props.attachment.buffer)\n\n\tconst uploadedFile =\n\t\tprops.contactType == 'contactForm' || props.contactType == 'keyRequest' ? null : [{\n\t\t\tfilename: props.attachment.file.name,\n\t\t\tcontent: fs.readFile(props.attachment.file.path, \"utf8\", function (err, data) { console.log(err) }),\n\t\t\tencoding: 'binary'\n\t\t}]\n\tconst sender = `${name} <${email}>`;\n\tconst message = {\n\t\tfrom: 'f.gozenc@narciss-taurus.de',\n\t\tto: 'f.gozenc@narciss-taurus.de',\n\t\tsubject: `Neu Nachricht von ${sender}`,\n\t\ttext: content,\n\t\tattachments: uploadedFile,\n\t\treplyTo: sender\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\ttransporter.sendMail(message, (error, info) =>\n\t\t\terror ? reject(error) : resolve(info)\n\t\t)\n\t})\n}\n\nmodule.exports = send"]},"metadata":{},"sourceType":"script"}
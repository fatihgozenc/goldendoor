{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/fatih/repos/goldendoor-next/components/templates/karriere/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport { useForm } from 'react-hook-form';\nimport { NextSeo } from 'next-seo';\nimport { useDropzone } from 'react-dropzone';\nimport Breadcrumb from '../../Breadcrumb';\nimport Dropzone from 'react-dropzone-uploader';\nimport serialize from 'serialize-javascript';\n\nvar bufferify = require('json-bufferify');\n\nimport Icon from '../../Icon';\nimport './style.scss';\nexport default (({\n  data,\n  language\n}) => {\n  const formFields = data.fields.karriere_bewerbung;\n  const [jobStartDate, setJobStartDate] = React.useState(new Date());\n\n  const collapseBlock = el => {\n    let sectionHeight = el.scrollHeight;\n    let elTransition = el.style.transition;\n    el.style.transition = '';\n    requestAnimationFrame(function () {\n      el.style.height = sectionHeight + 'px';\n      el.style.transition = elTransition;\n      requestAnimationFrame(function () {\n        el.style.height = 6 + 'rem';\n      });\n    });\n  };\n\n  const expandBlock = el => {\n    let sectionHeight = el.scrollHeight;\n    el.style.height = sectionHeight + 'px';\n\n    let trigger = el => {\n      el.addEventListener('transitionend', function (e) {\n        el.removeEventListener('transitionend', trigger);\n        el.style.height = null;\n      });\n    };\n  };\n\n  const openBlock = e => {\n    const entryContainer = e.currentTarget.parentElement.parentElement;\n    let isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n\n    if (isCollapsed) {\n      collapseBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'false');\n    } else {\n      expandBlock(entryContainer);\n      entryContainer.setAttribute('data-collapsed', 'true');\n    }\n\n    e.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n  };\n\n  const labels = data.fields.karriere_bewerbung.bewerbung_etiketten;\n  const uploadText = formFields.bewerbung_hochladen;\n  const uploadMessages = formFields.formnachrichten;\n  const [uploadedFile, setUploadedFile] = React.useState({\n    file: '',\n    buffer: {}\n  });\n\n  const MyUploader = () => {\n    // specify upload params and url for your files\n    const getUploadParams = ({\n      meta\n    }) => {\n      return {\n        url: 'https://httpbin.org/post'\n      };\n    }; // called every time a file's `status` changes\n\n\n    const handleChangeStatus = ({\n      meta,\n      file\n    }, status) => {\n      console.log(status, meta, file);\n    }; // receives array of files that are done uploading when submit button is clicked\n\n\n    const handleSubmit = (files, allFiles) => {\n      console.log(files.map(f => f.meta));\n      allFiles.forEach(f => f.remove());\n    };\n\n    return __jsx(Dropzone, {\n      getUploadParams: getUploadParams,\n      onChangeStatus: handleChangeStatus,\n      onSubmit: handleSubmit,\n      accept: \"application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  };\n\n  const onDrop = React.useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(uploadMessages[1].text);\n\n      reader.onerror = () => console.log(uploadMessages[1].text);\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        setUploadedFile({\n          file: file,\n          buffer: binaryStr\n        });\n      };\n\n      reader.readAsArrayBuffer(file);\n      console.log(file);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  const uploadTextParts = uploadText.split(' ');\n  const [submitted, setSubmitted] = React.useState(false);\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    const formData = {\n      lang: language,\n      contactType: \"jobApplication\",\n      name: language === 'de' ? data.bewerbung_vorname : data.bewerbung_name,\n      surname: language === 'de' ? data.bewerbung_name : data.bewerbung_surname,\n      email: data.bewerbung_email,\n      position: data.job_position,\n      jobstatus: data.job_status,\n      startdate: jobStartDate.toDateString(),\n      message: data.job_message,\n      attachment_name: uploadedFile.file.path,\n      attachment_buffer: new TextDecoder('utf-8').decode(uploadedFile.buffer)\n    };\n    fetch('/api/kontakt', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: _JSON$stringify(formData)\n    }).then(res => {\n      res.status === 200 ? setSubmitted(!submitted) : '';\n    }).catch(err => console.log(err));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(NextSeo, {\n    title: data.fields.seo.title,\n    description: data.fields.seo.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"page__title page__title--contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(Breadcrumb, {\n    slug: data.slug,\n    title: data.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, data.title)), __jsx(\"div\", {\n    className: \"career\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map((item, key) => __jsx(\"div\", {\n    key: key,\n    className: \"career__entry--wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"career__entry\",\n    \"data-collapsed\": \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"career__entry--block career__entry--util\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, item.info.arbeitszeit), __jsx(\"div\", {\n    className: \"career__entry--block career__entry--info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, item.info.titel), parse(item.beschreibung), __jsx(\"a\", {\n    href: \"#bewerbung\",\n    className: \"golden__button button--bewerbung\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, formFields.bewerbung_button)), __jsx(\"div\", {\n    className: \"career__entry--block career__entry--util\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, item.info.standort), __jsx(\"div\", {\n    className: \"career__entry--block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: `#job-${key}`,\n    onClick: e => openBlock(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Icon, {\n    type: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }))))))), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    id: \"bewerbung\",\n    className: \"career__application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, formFields.bewerbung_titel), __jsx(\"div\", {\n    className: \"contact__step--flexWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, labels.bewerbung_vorname, \"*\", __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"text\",\n    ref: register({\n      required: true,\n      maxlength: 20,\n      pattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n    }),\n    name: \"bewerbung_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, labels.bewerbung_name, \"*\", __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"text\",\n    ref: register({\n      required: true,\n      maxlength: 20,\n      pattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n    }),\n    name: \"bewerbung_surname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"EMAIL*\", __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"email\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: `UNGÜLTIGE E-MAIL-ADRESSE`\n      }\n    }),\n    name: \"bewerbung_email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"label__text\",\n    htmlFor: \"bewerbung_tel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, labels.bewerbung_telefon, __jsx(\"input\", {\n    className: \"input__text\",\n    type: \"tel\",\n    ref: register({\n      maxlength: 35\n    }),\n    name: \"bewerbung_tel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_position\",\n    className: \"label__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, formFields.bewerbung_frage_1), __jsx(\"select\", {\n    name: \"job_position\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, __jsx(\"optgroup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, data.fields.karriere_eintrage.map((item, key) => __jsx(\"option\", {\n    key: key,\n    value: item.info.titel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, item.info.titel, \", \", item.info.standort))))), __jsx(\"div\", {\n    className: \"contact__stepblock uploadcv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, __jsx(\"div\", _extends({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), __jsx(\"input\", _extends({\n    name: \"uploadedfile\",\n    ref: register\n  }, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  })), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, uploadTextParts[0]), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, uploadTextParts[1]), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, `${uploadTextParts[2]} ${uploadTextParts[3]}`))), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_status\",\n    className: \"contact__stepblock--inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, formFields.bewerbung_frage_2.frage), formFields.bewerbung_frage_2.job_status.map((item, key) => __jsx(\"p\", {\n    className: \"contact__stepblock--inner contact__stepblock--career\",\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    ref: register,\n    className: \"input__radio\",\n    type: \"radio\",\n    name: \"job_status\",\n    value: item.status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"label__radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, item.status)))), __jsx(\"div\", {\n    className: \"contact__stepblock contact__stepblock--date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"contact__stepblock--inner\",\n    htmlFor: \"job_start_date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, formFields.bewerbung_zeit), __jsx(DatePicker, {\n    selected: jobStartDate,\n    onChange: date => setJobStartDate(date),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"job_message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, formFields.bewerbung_nachricht), __jsx(\"textarea\", {\n    ref: register,\n    name: \"job_message\",\n    id: \"job_message\",\n    cols: \"30\",\n    rows: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"contact__stepblock career__submitwrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, formFields.bewerbung_button)))));\n});","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/components/templates/karriere/index.js"],"names":["parse","DatePicker","useForm","NextSeo","useDropzone","Breadcrumb","Dropzone","serialize","bufferify","require","Icon","data","language","formFields","fields","karriere_bewerbung","jobStartDate","setJobStartDate","React","useState","Date","collapseBlock","el","sectionHeight","scrollHeight","elTransition","style","transition","requestAnimationFrame","height","expandBlock","trigger","addEventListener","e","removeEventListener","openBlock","entryContainer","currentTarget","parentElement","isCollapsed","getAttribute","setAttribute","firstElementChild","classList","toggle","labels","bewerbung_etiketten","uploadText","bewerbung_hochladen","uploadMessages","formnachrichten","uploadedFile","setUploadedFile","file","buffer","MyUploader","getUploadParams","meta","url","handleChangeStatus","status","console","log","handleSubmit","files","allFiles","map","f","forEach","remove","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","text","onerror","onload","binaryStr","result","readAsArrayBuffer","getRootProps","getInputProps","uploadTextParts","split","submitted","setSubmitted","register","errors","onSubmit","formData","lang","contactType","name","bewerbung_vorname","bewerbung_name","surname","bewerbung_surname","email","bewerbung_email","position","job_position","jobstatus","job_status","startdate","toDateString","message","job_message","attachment_name","path","attachment_buffer","TextDecoder","decode","fetch","method","headers","body","then","res","catch","err","seo","title","description","slug","karriere_eintrage","item","key","info","arbeitszeit","titel","beschreibung","bewerbung_button","standort","bewerbung_titel","required","maxlength","pattern","value","bewerbung_telefon","bewerbung_frage_1","bewerbung_frage_2","frage","bewerbung_zeit","date","bewerbung_nachricht"],"mappings":"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","sourcesContent":["import parse from 'html-react-parser';\nimport DatePicker from 'react-datepicker';\nimport { useForm } from 'react-hook-form';\nimport { NextSeo } from 'next-seo';\nimport { useDropzone } from 'react-dropzone';\nimport Breadcrumb from '../../Breadcrumb';\nimport Dropzone from 'react-dropzone-uploader'\nimport serialize from 'serialize-javascript';\nvar bufferify = require('json-bufferify');\nimport Icon from '../../Icon';\nimport './style.scss';\n\nexport default ({ data, language }) => {\n\n\tconst formFields = data.fields.karriere_bewerbung;\n\n\tconst [jobStartDate, setJobStartDate] = React.useState(new Date());\n\n\tconst collapseBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tlet elTransition = el.style.transition;\n\t\tel.style.transition = '';\n\t\trequestAnimationFrame(function () {\n\t\t\tel.style.height = sectionHeight + 'px';\n\t\t\tel.style.transition = elTransition;\n\t\t\trequestAnimationFrame(function () {\n\t\t\t\tel.style.height = 6 + 'rem';\n\t\t\t});\n\t\t});\n\t}\n\n\tconst expandBlock = (el) => {\n\t\tlet sectionHeight = el.scrollHeight;\n\t\tel.style.height = sectionHeight + 'px';\n\t\tlet trigger = (el) => {\n\t\t\tel.addEventListener('transitionend', function (e) {\n\t\t\t\tel.removeEventListener('transitionend', trigger);\n\t\t\t\tel.style.height = null;\n\t\t\t});\n\t\t}\n\t}\n\n\tconst openBlock = (e) => {\n\t\tconst entryContainer = e.currentTarget.parentElement.parentElement;\n\t\tlet isCollapsed = entryContainer.getAttribute('data-collapsed') === 'true';\n\t\tif (isCollapsed) {\n\t\t\tcollapseBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'false');\n\t\t} else {\n\t\t\texpandBlock(entryContainer)\n\t\t\tentryContainer.setAttribute('data-collapsed', 'true');\n\t\t}\n\t\te.currentTarget.firstElementChild.classList.toggle('rotateSymbol');\n\t}\n\n\tconst labels = data.fields.karriere_bewerbung.bewerbung_etiketten;\n\n\tconst uploadText = formFields.bewerbung_hochladen;\n\tconst uploadMessages = formFields.formnachrichten;\n\tconst [uploadedFile, setUploadedFile] = React.useState({\n\t\tfile: '',\n\t\tbuffer: {}\n\t});\n\n\tconst MyUploader = () => {\n\t\t// specify upload params and url for your files\n\t\tconst getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n\n\t\t// called every time a file's `status` changes\n\t\tconst handleChangeStatus = ({ meta, file }, status) => { console.log(status, meta, file) }\n\n\t\t// receives array of files that are done uploading when submit button is clicked\n\t\tconst handleSubmit = (files, allFiles) => {\n\t\t\tconsole.log(files.map(f => f.meta))\n\t\t\tallFiles.forEach(f => f.remove())\n\t\t}\n\n\t\treturn (\n\t\t\t<Dropzone\n\t\t\t\tgetUploadParams={getUploadParams}\n\t\t\t\tonChangeStatus={handleChangeStatus}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\taccept=\"application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n\t\t\t/>\n\t\t)\n\t}\n\n\n\tconst onDrop = React.useCallback((acceptedFiles) => {\n\t\tacceptedFiles.forEach((file) => {\n\t\t\tconst reader = new FileReader()\n\t\t\treader.onabort = () => console.log(uploadMessages[1].text)\n\t\t\treader.onerror = () => console.log(uploadMessages[1].text)\n\t\t\treader.onload = () => {\n\t\t\t\t// Do whatever you want with the file contents\n\t\t\t\tconst binaryStr = reader.result\n\t\t\t\tsetUploadedFile({ file: file, buffer: binaryStr })\n\t\t\t}\n\t\t\treader.readAsArrayBuffer(file)\n\t\t\tconsole.log(file)\n\t\t})\n\n\t}, [])\n\n\tconst { getRootProps, getInputProps } = useDropzone({ onDrop })\n\tconst uploadTextParts = uploadText.split(' ');\n\tconst [submitted, setSubmitted] = React.useState(false);\n\tconst { handleSubmit, register, errors } = useForm();\n\n\tconst onSubmit = data => {\n\t\tconst formData = {\n\t\t\tlang: language,\n\t\t\tcontactType: \"jobApplication\",\n\t\t\tname: language === 'de' ? data.bewerbung_vorname : data.bewerbung_name,\n\t\t\tsurname: language === 'de' ? data.bewerbung_name : data.bewerbung_surname,\n\t\t\temail: data.bewerbung_email,\n\t\t\tposition: data.job_position,\n\t\t\tjobstatus: data.job_status,\n\t\t\tstartdate: jobStartDate.toDateString(),\n\t\t\tmessage: data.job_message,\n\t\t\tattachment_name: uploadedFile.file.path,\n\t\t\tattachment_buffer: new TextDecoder('utf-8').decode(uploadedFile.buffer)\n\t\t}\n\t\tfetch('/api/kontakt', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json, text/plain, */*',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(formData)\n\t\t}).then((res) => {\n\t\t\tres.status === 200 ? setSubmitted(!submitted) : ''\n\t\t}).catch((err) => console.log(err))\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<NextSeo\n\t\t\t\ttitle={data.fields.seo.title}\n\t\t\t\tdescription={data.fields.seo.description}\n\t\t\t/>\n\t\t\t<div className=\"page__title page__title--contact\">\n\t\t\t\t<Breadcrumb slug={data.slug} title={data.title} />\n\t\t\t\t<h1>{data.title}</h1>\n\t\t\t</div>\n\t\t\t<div className=\"career\">\n\t\t\t\t{\n\t\t\t\t\tdata.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t<div key={key} className=\"career__entry--wrapper\">\n\t\t\t\t\t\t\t<div className=\"career__entry\" data-collapsed=\"false\">\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.arbeitszeit}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--info\">\n\t\t\t\t\t\t\t\t\t<h3>{item.info.titel}</h3>\n\t\t\t\t\t\t\t\t\t{parse(item.beschreibung)}\n\t\t\t\t\t\t\t\t\t<a href=\"#bewerbung\" className=\"golden__button button--bewerbung\">\n\t\t\t\t\t\t\t\t\t\t{formFields.bewerbung_button}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block career__entry--util\">\n\t\t\t\t\t\t\t\t\t{item.info.standort}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"career__entry--block\">\n\t\t\t\t\t\t\t\t\t<a href={`#job-${key}`} onClick={(e) => openBlock(e)}>\n\t\t\t\t\t\t\t\t\t\t<Icon type=\"plus\" />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<form onSubmit={handleSubmit(onSubmit)} id=\"bewerbung\" className=\"career__application\">\n\n\t\t\t\t<h2>{formFields.bewerbung_titel}</h2>\n\n\t\t\t\t<div className=\"contact__step--flexWrapper\">\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_name\">{labels.bewerbung_vorname}*\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmaxlength: 20,\n\t\t\t\t\t\t\t\t\tpattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tname=\"bewerbung_name\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_name\">{labels.bewerbung_name}*\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmaxlength: 20,\n\t\t\t\t\t\t\t\t\tpattern: /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tname=\"bewerbung_surname\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_email\">EMAIL*\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tref={register({\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n\t\t\t\t\t\t\t\t\t\tmessage: `UNGÜLTIGE E-MAIL-ADRESSE`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tname=\"bewerbung_email\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label className=\"label__text\" htmlFor=\"bewerbung_tel\">{labels.bewerbung_telefon}\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input__text\"\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tref={\n\t\t\t\t\t\t\t\t\tregister({\n\t\t\t\t\t\t\t\t\t\tmaxlength: 35\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tname=\"bewerbung_tel\" />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_position\" className=\"label__select\">{formFields.bewerbung_frage_1}</label>\n\t\t\t\t\t\t<select name=\"job_position\" ref={register}>\n\t\t\t\t\t\t\t<optgroup>\n\t\t\t\t\t\t\t\t{data.fields.karriere_eintrage.map((item, key) => (\n\t\t\t\t\t\t\t\t\t<option key={key} value={item.info.titel}>{item.info.titel}, {item.info.standort}</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock uploadcv\">\n\t\t\t\t\t\t{/* <MyUploader /> */}\n\t\t\t\t\t\t<div {...getRootProps()}>\n\t\t\t\t\t\t\t<input name=\"uploadedfile\" ref={register} {...getInputProps()} />\n\t\t\t\t\t\t\t<span>{uploadTextParts[0]}</span>\n\t\t\t\t\t\t\t<span>{uploadTextParts[1]}</span>\n\t\t\t\t\t\t\t<span>{`${uploadTextParts[2]} ${uploadTextParts[3]}`}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_status\"\n\t\t\t\t\t\t\tclassName=\"contact__stepblock--inner\">{formFields.bewerbung_frage_2.frage}</label>\n\t\t\t\t\t\t{formFields.bewerbung_frage_2.job_status.map((item, key) => (\n\t\t\t\t\t\t\t<p className=\"contact__stepblock--inner contact__stepblock--career\" key={key}>\n\t\t\t\t\t\t\t\t<input ref={register} className=\"input__radio\" type=\"radio\" name=\"job_status\" value={item.status} />\n\t\t\t\t\t\t\t\t<span className=\"label__radio\">{item.status}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock contact__stepblock--date\">\n\t\t\t\t\t\t<label className=\"contact__stepblock--inner\" htmlFor=\"job_start_date\">{formFields.bewerbung_zeit}</label>\n\t\t\t\t\t\t<DatePicker selected={jobStartDate} onChange={date => setJobStartDate(date)} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock\">\n\t\t\t\t\t\t<label htmlFor=\"job_message\">{formFields.bewerbung_nachricht}</label>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\tname=\"job_message\"\n\t\t\t\t\t\t\tid=\"job_message\" cols=\"30\" rows=\"5\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"contact__stepblock career__submitwrapper\" >\n\n\t\t\t\t\t\t<button type=\"submit\" className=\"golden__button\">{formFields.bewerbung_button}</button>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t</form>\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
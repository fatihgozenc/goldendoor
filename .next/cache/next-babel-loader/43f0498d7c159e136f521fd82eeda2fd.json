{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport Icon from './Icon';\n\nconst MapContainer = ({\n  data\n}) => {\n  const [viewport, setViewport] = React.useState({\n    width: '100%',\n    height: '100%',\n    latitude: _parseFloat(data.breitengrad),\n    longitude: _parseFloat(data.langengrad),\n    zoom: _parseFloat(data.zoomwert)\n  });\n  return __jsx(React.Fragment, null, __jsx(ReactMapGL, _extends({}, viewport, {\n    mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZmdvemVuYyIsImEiOiJjazVoMG9tMjUwY2p1M2xueHUzaXdyY2MzIn0.i6wqAEOUFdUyKEMcrUE__Q\",\n    onViewportChange: viewport => setViewport(_objectSpread({}, viewport))\n  }), __jsx(Marker, {\n    latitude: _parseFloat(data.breitengrad),\n    longitude: _parseFloat(data.langengrad),\n    offsetLeft: 0,\n    offsetTop: 0\n  }, __jsx(Icon, {\n    type: \"mapMarker\"\n  }))));\n};\n\nexport default MapContainer;","map":null,"metadata":{},"sourceType":"module"}
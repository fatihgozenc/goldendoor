{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/fatih/repos/goldendoor-next/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/layout/Layout';\nimport { DefaultSeo } from 'next-seo';\n\nfunction GoldenDoor({\n  Component,\n  pageProps,\n  layoutData,\n  pathname,\n  lang\n}) {\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(DefaultSeo, {\n    openGraph: {\n      type: 'website',\n      locale: 'de_DE',\n      url: 'http://goldendoor.group/',\n      site_name: 'Golden Door Group'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    href: \"https://api.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), __jsx(Layout, {\n    data: layoutData,\n    pathname: pathname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n}\n\nGoldenDoor.getInitialProps = async appContext => {\n  const pathname = appContext.router.asPath;\n  const lang = appContext.router.asPath.split('/')[1] === 'en' ? 'en' : 'de';\n  const response = await fetch(`${process.env.API_HOST_SITE}${lang}/layout`);\n  const data = await response.json();\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps, {\n    layoutData: data,\n    pathname: pathname,\n    lang: lang\n  });\n};\n\nexport default GoldenDoor;","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/pages/_app.js"],"names":["App","Head","fetch","Layout","DefaultSeo","GoldenDoor","Component","pageProps","layoutData","pathname","lang","type","locale","url","site_name","getInitialProps","appContext","router","asPath","split","response","process","env","API_HOST_SITE","data","json","appProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,UAA3B;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,UAAxB;AAAoCC,EAAAA,QAApC;AAA8CC,EAAAA;AAA9C,CAApB,EAA0E;AACzE,SACC,4BACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,UAAD;AACC,IAAA,SAAS,EAAE;AACVC,MAAAA,IAAI,EAAE,SADI;AAEVC,MAAAA,MAAM,EAAE,OAFE;AAGVC,MAAAA,GAAG,EAAE,0BAHK;AAIVC,MAAAA,SAAS,EAAE;AAJD,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EASC;AAAM,IAAA,IAAI,EAAC,2DAAX;AAAuE,IAAA,GAAG,EAAC,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD,EAYC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEN,UAAd;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CAZD,CADD;AAkBA;;AAEDF,UAAU,CAACU,eAAX,GAA6B,MAAOC,UAAP,IAAsB;AAClD,QAAMP,QAAQ,GAAGO,UAAU,CAACC,MAAX,CAAkBC,MAAnC;AACA,QAAMR,IAAI,GAAGM,UAAU,CAACC,MAAX,CAAkBC,MAAlB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,MAA2C,IAA3C,GAAkD,IAAlD,GAAyD,IAAtE;AACA,QAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAAE,GAAEmB,OAAO,CAACC,GAAR,CAAYC,aAAc,GAAEb,IAAK,SAArC,CAA5B;AACA,QAAMc,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,QAAMC,QAAQ,GAAG,MAAM1B,GAAG,CAACe,eAAJ,CAAoBC,UAApB,CAAvB;AACA,2BAAYU,QAAZ;AAAsBlB,IAAAA,UAAU,EAAEgB,IAAlC;AAAwCf,IAAAA,QAAQ,EAAEA,QAAlD;AAA4DC,IAAAA,IAAI,EAAEA;AAAlE;AACA,CAPD;;AASA,eAAeL,UAAf","sourcesContent":["import App from 'next/app'\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch'\nimport Layout from '../components/layout/Layout';\nimport { DefaultSeo } from 'next-seo';\n\nfunction GoldenDoor({ Component, pageProps, layoutData, pathname, lang }) {\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<DefaultSeo\n\t\t\t\t\topenGraph={{\n\t\t\t\t\t\ttype: 'website',\n\t\t\t\t\t\tlocale: 'de_DE',\n\t\t\t\t\t\turl: 'http://goldendoor.group/',\n\t\t\t\t\t\tsite_name: 'Golden Door Group',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<link href=\"https://api.mapbox.com/mapbox-gl-js/v0.51.0/mapbox-gl.css\" rel=\"stylesheet\" />\n\t\t\t</Head>\n\t\t\t<Layout data={layoutData} pathname={pathname}>\n\t\t\t\t<Component {...pageProps} />\n\t\t\t</Layout>\n\t\t</>\n\t)\n}\n\nGoldenDoor.getInitialProps = async (appContext) => {\n\tconst pathname = appContext.router.asPath\n\tconst lang = appContext.router.asPath.split('/')[1] === 'en' ? 'en' : 'de';\n\tconst response = await fetch(`${process.env.API_HOST_SITE}${lang}/layout`)\n\tconst data = await response.json()\n\tconst appProps = await App.getInitialProps(appContext);\n\treturn { ...appProps, layoutData: data, pathname: pathname, lang: lang }\n}\n\nexport default GoldenDoor;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport parse from 'html-react-parser';\nimport { useForm } from \"react-hook-form\";\n\nvar Newsletter = function Newsletter(_ref) {\n  var data = _ref.data;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accessToken = _React$useState2[0],\n      setAccessToken = _React$useState2[1];\n\n  var n2goHeaders = new Headers();\n  n2goHeaders.append(\"Content-Type\", \"application/json\");\n  n2goHeaders.append(\"Authorization\", \"Basic \" + Buffer.from(process.env.NEWSLETTER_API_KEY).toString('base64'));\n\n  var n2goBody = _JSON$stringify({\n    \"username\": process.env.NEWSLETTER_USER,\n    \"password\": process.env.NEWSLETTER_PASS,\n    \"grant_type\": \"https://nl2go.com/jwt\"\n  });\n\n  var requestOpts = {\n    method: 'POST',\n    headers: n2goHeaders,\n    body: n2goBody,\n    redirect: 'follow'\n  };\n\n  var connectToNewsletter = function connectToNewsletter() {\n    fetch(\"\".concat(process.env.NEWSLETTER_API_HOST, \"/oauth/v2/token\"), requestOpts).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      setAccessToken(result.access_token);\n      localStorage.setItem('newsletter', result.access_token);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  React.useEffect(function () {\n    // localStorage.getItem('newsletter') === null &&\n    connectToNewsletter();\n  }, []);\n\n  var registerNewsletterUser = function registerNewsletterUser(name, surname, email, gender, token) {\n    var n2goRegisterHeaders = new Headers();\n    n2goRegisterHeaders.append(\"Content-Type\", \"application/json\");\n    n2goRegisterHeaders.append(\"Authorization\", \"Bearer \" + token);\n\n    var n2goRegisterBody = _JSON$stringify({\n      \"list_id\": \"r9s81zk7\",\n      \"email\": email,\n      \"gender\": gender === 'Herr' || 'Mr.' ? 'm' : 'f',\n      \"first_name\": name,\n      \"last_name\": surname,\n      \"is_unsubscribed\": false,\n      \"is_blacklisted\": false\n    });\n\n    var registerRequestOpts = {\n      method: 'POST',\n      headers: n2goRegisterHeaders,\n      body: n2goRegisterBody,\n      redirect: 'follow'\n    };\n    fetch(\"\".concat(process.env.NEWSLETTER_API_HOST, \"/recipients\"), registerRequestOpts).then(function (response) {\n      return response.text();\n    }).then(function (result) {\n      return console.log(result);\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n\n  var _useForm = useForm(),\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(values) {\n    registerNewsletterUser(values.vorname, values.name, values.email, values.anrede, accessToken);\n  };\n\n  return __jsx(\"div\", {\n    id: \"newsletter\",\n    className: \"newsletter\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__block\"\n  }, __jsx(\"h3\", null, \"Newsletter\"), __jsx(\"p\", null, data.subtitel)), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"newsletter__form\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--block\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"vorname\"\n  }, data.vorname), __jsx(\"input\", {\n    name: \"vorname\",\n    ref: register({\n      pattern: /^[A-Za-z]+$/i,\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    })\n  }), errors.vorname && errors.vorname.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, data.name), __jsx(\"input\", {\n    name: \"name\",\n    ref: register({\n      pattern: /^[A-Za-z]+$/i,\n      validate: function validate(value) {\n        return value !== \"admin\" || \"Nice try!\";\n      }\n    })\n  }), errors.name && errors.name.message)), __jsx(\"div\", {\n    className: \"newsletter__form--block\"\n  }, __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"anrede\"\n  }, data.anrede.value), __jsx(\"select\", {\n    name: \"anrede\",\n    ref: register\n  }, __jsx(\"optgroup\", null, __jsx(\"option\", {\n    value: data.anrede.herr\n  }, data.anrede.herr), __jsx(\"option\", {\n    value: data.anrede.frau\n  }, data.anrede.frau))), errors.anrede && errors.anrede.message), __jsx(\"div\", {\n    className: \"newsletter__form--field\"\n  }, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, data.email), __jsx(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: data.fehlerfelder.required,\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: data.fehlerfelder.invalid\n      }\n    })\n  }), errors.email && errors.email.message)), __jsx(\"div\", {\n    className: \"newsletter__datenschutz\"\n  }, parse(data.datenschutz.text), __jsx(\"input\", {\n    className: \"input__radio\",\n    type: \"checkbox\",\n    required: true,\n    name: \"acceptance\"\n  }), __jsx(\"label\", {\n    className: \"label__radio\",\n    htmlFor: \"acceptance\"\n  }, data.datenschutz.checkbox), parse(data.datenschutz.extra)), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"golden__button\"\n  }, data.datenschutz.button)));\n};\n\nexport default Newsletter;","map":null,"metadata":{},"sourceType":"module"}
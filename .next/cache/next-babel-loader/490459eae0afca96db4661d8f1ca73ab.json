{"ast":null,"code":"var _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\n\nconst nodemailer = require('nodemailer');\n\nconst fs = require('fs');\n\nconst transporter = nodemailer.createTransport({\n  pool: true,\n  host: \"smtprelaypool.ispgateway.de\",\n  port: 465,\n  secure: true,\n  // use TLS\n  auth: {\n    user: 'f.gozenc@narciss-taurus.de',\n    pass: '1rk3n84L>h8c'\n  }\n});\n\nconst send = props => {\n  console.log(props);\n  const name = props.contactType == 'contactForm' ? props.kontakt_name + \" \" + props.kontakt_surname : props.name + ' ' + props.surname;\n  const email = props.contactType == 'contactForm' ? props.kontakt_email : props.email;\n\n  const text = () => {\n    if (props.contactType == 'contactForm') {\n      return `\n\t\t\t\t\\r\\nKontaktdaten\\r\\n\n\t\t\t\tAnrede: ${props.kontakt_anrede}\\r\\n\n\t\t\t\tVorname: ${props.kontakt_name}\\r\\n\n\t\t\t\tNachname: ${props.kontakt_surname}\\r\\n\n\t\t\t\tE-Mail: ${props.kontakt_email}\\r\\n\n\t\t\t\tTelefon: ${props.kontakt_phone}\\r\\n\n\t\t\t\tFirma: ${props.kontakt_company}\\r\\n\n\t\t\t\tNachricht: ${props.event_nachricht}\\r\\n\n\t\t\t\t\\r\\nEventinformationen\\r\\n\n\t\t\t\tArt der Veranstaltung: ${props.event_type}\\r\\n\n\t\t\t\tLocation Auswahl: ${props.event_location}\\r\\n\n\t\t\t\tKonkretes Datum?: ${props.event_date_answer}\\r\\n\n\t\t\t\tZeitraum (Wenn es kein konkretes Datum gibt): ${props.date_range}\\r\\n\n\t\t\t\tEvent Datum (Wenn es ein konkretes Datum gibt): ${props.eventdatum}\\r\\n\n\t\t\t\tEvent Ausweichtermin (Wenn es ein konkretes Datum gibt): ${props.ausweichtermin}\\r\\n\n\t\t\t\tEvent Beginn Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitbeginn}\\r\\n\n\t\t\t\tEvent Ende Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitend}\\r\\n\n\t\t\t\t\\r\\nZusatzinformationen\\r\\n\n\t\t\t\tAnzahl der Personen: ${props.personenzahl}\\r\\n\n\t\t\t\tMaximal Budget?: ${props.event_max_budget}\\r\\n\n\t\t\t\t\\r\\nGewünschte dienstleistungen\\r\\n\n\t\t\t\tSpeisenauswahl: ${props.lang === 'de' ? props.event_speisen : props.event_food}\\r\\n\n\t\t\t\tMobiliarauswahl: ${props.lang === 'de' ? props.event_mobiliar : props.event_furnishings}\\r\\n\n\t\t\t\tTechnikauswahl: ${props.lang === 'de' ? props.event_technik : props.event_technique}\\r\\n\n\t\t\t\tDekoauswahl: ${props.lang === 'de' ? props.event_deko : props.event_decoration}\\r\\n\n\t\t\t\tMusikauswahl: ${props.lang === 'de' ? props.event_musik : props.event_music}\\r\\n\n\t\t\t`;\n    } else if (props.contactType == 'keyRequest') {\n      return `\n\t\t\t\t\\r\\nSchlüsselanfrage für Pressekit\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t`;\n    } else {\n      return `\n\t\t\t\t\\r\\nKarriere Bewerbung\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t\tBerufliche Stellung: ${props.position}\\r\\n\n\t\t\t\tAktueller Jobsstatus: ${props.jobstatus}\\r\\n\n\t\t\t\tMögliches Start-Datum: ${props.startdate}\\r\\n\n\t\t\t\tNachricht: ${props.message}\\r\\n\n\t\t\t`;\n    }\n  };\n\n  const content = text();\n  console.log(content);\n  const uploadedFile = props.contactType == 'contactForm' || props.contactType == 'keyRequest' ? null : [{\n    filename: props.attachment.filename,\n    path: fs.createReadStream(props.attachment.path),\n    content: fs.createReadStream(props.attachment.path)\n  }];\n  const sender = `${name} <${email}>`;\n  const message = {\n    from: 'f.gozenc@narciss-taurus.de',\n    to: 'f.gozenc@narciss-taurus.de',\n    subject: `Neu Nachricht von ${sender}`,\n    text: content,\n    attachments: uploadedFile,\n    replyTo: sender\n  };\n  return new _Promise((resolve, reject) => {\n    transporter.sendMail(message, (error, info) => error ? reject(error) : resolve(info));\n  });\n};\n\nmodule.exports = send;","map":{"version":3,"sources":["/Users/fatih/repos/goldendoor-next/kontaktMailer.js"],"names":["nodemailer","require","fs","transporter","createTransport","pool","host","port","secure","auth","user","pass","send","props","console","log","name","contactType","kontakt_name","kontakt_surname","surname","email","kontakt_email","text","kontakt_anrede","kontakt_phone","kontakt_company","event_nachricht","event_type","event_location","event_date_answer","date_range","eventdatum","ausweichtermin","eventzeitbeginn","eventzeitend","personenzahl","event_max_budget","lang","event_speisen","event_food","event_mobiliar","event_furnishings","event_technik","event_technique","event_deko","event_decoration","event_musik","event_music","position","jobstatus","startdate","message","content","uploadedFile","filename","attachment","path","createReadStream","sender","from","to","subject","attachments","replyTo","resolve","reject","sendMail","error","info","module","exports"],"mappings":";;AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAME,WAAW,GAAGH,UAAU,CAACI,eAAX,CAA2B;AAC9CC,EAAAA,IAAI,EAAE,IADwC;AAE9CC,EAAAA,IAAI,EAAE,6BAFwC;AAG9CC,EAAAA,IAAI,EAAE,GAHwC;AAI9CC,EAAAA,MAAM,EAAE,IAJsC;AAIhC;AACdC,EAAAA,IAAI,EAAE;AACLC,IAAAA,IAAI,EAAE,4BADD;AAELC,IAAAA,IAAI,EAAE;AAFD;AALwC,CAA3B,CAApB;;AAWA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,IAAI,GAAGH,KAAK,CAACI,WAAN,IAAqB,aAArB,GAAsCJ,KAAK,CAACK,YAAN,GAAqB,GAArB,GAA2BL,KAAK,CAACM,eAAvE,GAA0FN,KAAK,CAACG,IAAN,GAAa,GAAb,GAAmBH,KAAK,CAACO,OAAhI;AACA,QAAMC,KAAK,GAAGR,KAAK,CAACI,WAAN,IAAqB,aAArB,GAAqCJ,KAAK,CAACS,aAA3C,GAA2DT,KAAK,CAACQ,KAA/E;;AACA,QAAME,IAAI,GAAG,MAAM;AAClB,QAAIV,KAAK,CAACI,WAAN,IAAqB,aAAzB,EAAwC;AACvC,aAAS;;cAEEJ,KAAK,CAACW,cAAe;eACpBX,KAAK,CAACK,YAAa;gBAClBL,KAAK,CAACM,eAAgB;cACxBN,KAAK,CAACS,aAAc;eACnBT,KAAK,CAACY,aAAc;aACtBZ,KAAK,CAACa,eAAgB;iBAClBb,KAAK,CAACc,eAAgB;;6BAEVd,KAAK,CAACe,UAAW;wBACtBf,KAAK,CAACgB,cAAe;wBACrBhB,KAAK,CAACiB,iBAAkB;oDACIjB,KAAK,CAACkB,UAAW;sDACflB,KAAK,CAACmB,UAAW;+DACRnB,KAAK,CAACoB,cAAe;4DACxBpB,KAAK,CAACqB,eAAgB;0DACxBrB,KAAK,CAACsB,YAAa;;2BAElDtB,KAAK,CAACuB,YAAa;uBACvBvB,KAAK,CAACwB,gBAAiB;;sBAExBxB,KAAK,CAACyB,IAAN,KAAe,IAAf,GAAsBzB,KAAK,CAAC0B,aAA5B,GAA4C1B,KAAK,CAAC2B,UAAW;uBAC5D3B,KAAK,CAACyB,IAAN,KAAe,IAAf,GAAsBzB,KAAK,CAAC4B,cAA5B,GAA6C5B,KAAK,CAAC6B,iBAAkB;sBACtE7B,KAAK,CAACyB,IAAN,KAAe,IAAf,GAAsBzB,KAAK,CAAC8B,aAA5B,GAA4C9B,KAAK,CAAC+B,eAAgB;mBACrE/B,KAAK,CAACyB,IAAN,KAAe,IAAf,GAAsBzB,KAAK,CAACgC,UAA5B,GAAyChC,KAAK,CAACiC,gBAAiB;oBAC/DjC,KAAK,CAACyB,IAAN,KAAe,IAAf,GAAsBzB,KAAK,CAACkC,WAA5B,GAA0ClC,KAAK,CAACmC,WAAY;IA1B7E;AA4BA,KA7BD,MA6BO,IAAInC,KAAK,CAACI,WAAN,IAAqB,YAAzB,EAAuC;AAC7C,aAAS;;eAEGJ,KAAK,CAACG,IAAK;gBACVH,KAAK,CAACO,OAAQ;cAChBP,KAAK,CAACQ,KAAM;IAJvB;AAMA,KAPM,MAOA;AACN,aAAS;;eAEGR,KAAK,CAACG,IAAK;gBACVH,KAAK,CAACO,OAAQ;cAChBP,KAAK,CAACQ,KAAM;2BACCR,KAAK,CAACoC,QAAS;4BACdpC,KAAK,CAACqC,SAAU;6BACfrC,KAAK,CAACsC,SAAU;iBAC5BtC,KAAK,CAACuC,OAAQ;IAR5B;AAUA;AACD,GAjDD;;AAmDA,QAAMC,OAAO,GAAG9B,IAAI,EAApB;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYsC,OAAZ;AACA,QAAMC,YAAY,GAAGzC,KAAK,CAACI,WAAN,IAAqB,aAArB,IAAsCJ,KAAK,CAACI,WAAN,IAAqB,YAA3D,GAA0E,IAA1E,GAAiF,CAAC;AAAEsC,IAAAA,QAAQ,EAAE1C,KAAK,CAAC2C,UAAN,CAAiBD,QAA7B;AAAuCE,IAAAA,IAAI,EAAEvD,EAAE,CAACwD,gBAAH,CAAoB7C,KAAK,CAAC2C,UAAN,CAAiBC,IAArC,CAA7C;AAAyFJ,IAAAA,OAAO,EAAEnD,EAAE,CAACwD,gBAAH,CAAoB7C,KAAK,CAAC2C,UAAN,CAAiBC,IAArC;AAAlG,GAAD,CAAtG;AACA,QAAME,MAAM,GAAI,GAAE3C,IAAK,KAAIK,KAAM,GAAjC;AACA,QAAM+B,OAAO,GAAG;AACfQ,IAAAA,IAAI,EAAE,4BADS;AAEfC,IAAAA,EAAE,EAAE,4BAFW;AAGfC,IAAAA,OAAO,EAAG,qBAAoBH,MAAO,EAHtB;AAIfpC,IAAAA,IAAI,EAAE8B,OAJS;AAKfU,IAAAA,WAAW,EAAET,YALE;AAMfU,IAAAA,OAAO,EAAEL;AANM,GAAhB;AASA,SAAO,aAAY,CAACM,OAAD,EAAUC,MAAV,KAAqB;AACvC/D,IAAAA,WAAW,CAACgE,QAAZ,CAAqBf,OAArB,EAA8B,CAACgB,KAAD,EAAQC,IAAR,KAC7BD,KAAK,GAAGF,MAAM,CAACE,KAAD,CAAT,GAAmBH,OAAO,CAACI,IAAD,CADhC;AAGA,GAJM,CAAP;AAKA,CAzED;;AA2EAC,MAAM,CAACC,OAAP,GAAiB3D,IAAjB","sourcesContent":["const nodemailer = require('nodemailer')\nconst fs = require('fs');\nconst transporter = nodemailer.createTransport({\n\tpool: true,\n\thost: \"smtprelaypool.ispgateway.de\",\n\tport: 465,\n\tsecure: true, // use TLS\n\tauth: {\n\t\tuser: 'f.gozenc@narciss-taurus.de',\n\t\tpass: '1rk3n84L>h8c'\n\t}\n});\n\nconst send = (props) => {\n\tconsole.log(props)\n\tconst name = props.contactType == 'contactForm' ? (props.kontakt_name + \" \" + props.kontakt_surname) : props.name + ' ' + props.surname;\n\tconst email = props.contactType == 'contactForm' ? props.kontakt_email : props.email;\n\tconst text = () => {\n\t\tif (props.contactType == 'contactForm') {\n\t\t\treturn (`\n\t\t\t\t\\r\\nKontaktdaten\\r\\n\n\t\t\t\tAnrede: ${props.kontakt_anrede}\\r\\n\n\t\t\t\tVorname: ${props.kontakt_name}\\r\\n\n\t\t\t\tNachname: ${props.kontakt_surname}\\r\\n\n\t\t\t\tE-Mail: ${props.kontakt_email}\\r\\n\n\t\t\t\tTelefon: ${props.kontakt_phone}\\r\\n\n\t\t\t\tFirma: ${props.kontakt_company}\\r\\n\n\t\t\t\tNachricht: ${props.event_nachricht}\\r\\n\n\t\t\t\t\\r\\nEventinformationen\\r\\n\n\t\t\t\tArt der Veranstaltung: ${props.event_type}\\r\\n\n\t\t\t\tLocation Auswahl: ${props.event_location}\\r\\n\n\t\t\t\tKonkretes Datum?: ${props.event_date_answer}\\r\\n\n\t\t\t\tZeitraum (Wenn es kein konkretes Datum gibt): ${props.date_range}\\r\\n\n\t\t\t\tEvent Datum (Wenn es ein konkretes Datum gibt): ${props.eventdatum}\\r\\n\n\t\t\t\tEvent Ausweichtermin (Wenn es ein konkretes Datum gibt): ${props.ausweichtermin}\\r\\n\n\t\t\t\tEvent Beginn Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitbeginn}\\r\\n\n\t\t\t\tEvent Ende Zeit (Wenn es ein konkretes Datum gibt): ${props.eventzeitend}\\r\\n\n\t\t\t\t\\r\\nZusatzinformationen\\r\\n\n\t\t\t\tAnzahl der Personen: ${props.personenzahl}\\r\\n\n\t\t\t\tMaximal Budget?: ${props.event_max_budget}\\r\\n\n\t\t\t\t\\r\\nGewünschte dienstleistungen\\r\\n\n\t\t\t\tSpeisenauswahl: ${props.lang === 'de' ? props.event_speisen : props.event_food}\\r\\n\n\t\t\t\tMobiliarauswahl: ${props.lang === 'de' ? props.event_mobiliar : props.event_furnishings}\\r\\n\n\t\t\t\tTechnikauswahl: ${props.lang === 'de' ? props.event_technik : props.event_technique}\\r\\n\n\t\t\t\tDekoauswahl: ${props.lang === 'de' ? props.event_deko : props.event_decoration}\\r\\n\n\t\t\t\tMusikauswahl: ${props.lang === 'de' ? props.event_musik : props.event_music}\\r\\n\n\t\t\t`)\n\t\t} else if (props.contactType == 'keyRequest') {\n\t\t\treturn (`\n\t\t\t\t\\r\\nSchlüsselanfrage für Pressekit\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t`)\n\t\t} else {\n\t\t\treturn (`\n\t\t\t\t\\r\\nKarriere Bewerbung\\r\\n\n\t\t\t\tVorname: ${props.name}\\r\\n\n\t\t\t\tNachname: ${props.surname}\\r\\n\n\t\t\t\tE-Mail: ${props.email}\\r\\n\n\t\t\t\tBerufliche Stellung: ${props.position}\\r\\n\n\t\t\t\tAktueller Jobsstatus: ${props.jobstatus}\\r\\n\n\t\t\t\tMögliches Start-Datum: ${props.startdate}\\r\\n\n\t\t\t\tNachricht: ${props.message}\\r\\n\n\t\t\t`)\n\t\t}\n\t};\n\n\tconst content = text();\n\tconsole.log(content)\n\tconst uploadedFile = props.contactType == 'contactForm' || props.contactType == 'keyRequest' ? null : [{ filename: props.attachment.filename, path: fs.createReadStream(props.attachment.path), content: fs.createReadStream(props.attachment.path) }]\n\tconst sender = `${name} <${email}>`;\n\tconst message = {\n\t\tfrom: 'f.gozenc@narciss-taurus.de',\n\t\tto: 'f.gozenc@narciss-taurus.de',\n\t\tsubject: `Neu Nachricht von ${sender}`,\n\t\ttext: content,\n\t\tattachments: uploadedFile,\n\t\treplyTo: sender\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\ttransporter.sendMail(message, (error, info) =>\n\t\t\terror ? reject(error) : resolve(info)\n\t\t)\n\t})\n}\n\nmodule.exports = send"]},"metadata":{},"sourceType":"script"}